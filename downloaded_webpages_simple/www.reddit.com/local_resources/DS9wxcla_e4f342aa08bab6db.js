SML.di("./DczBT2kf.js",import.meta.url,"DczBT2kf");SML.di("./DGY0b97R.js",import.meta.url,"DGY0b97R");SML.di("./YWXw6gDz.js",import.meta.url,"YWXw6gDz");SML.di("./ChYc5yrF.js",import.meta.url,"ChYc5yrF");SML.di("./DQaRMILU.js",import.meta.url,"DQaRMILU");SML.di("./CGYl-sUB.js",import.meta.url,"CGYl-sUB");SML.di("./DVMhF-xZ.js",import.meta.url,"DVMhF-xZ");SML.di("./DN8NCGGW.js",import.meta.url,"DN8NCGGW");SML.di("./DDco8exZ.js",import.meta.url,"DDco8exZ");SML.di("./CElIDZoh.js",import.meta.url,"CElIDZoh");SML.di("./Bahzn9My.js",import.meta.url,"Bahzn9My");SML.di("./DwsEu536.js",import.meta.url,"DwsEu536");SML.di("./qCJremDI.js",import.meta.url,"qCJremDI");SML.di("./BZ-chNG6.js",import.meta.url,"BZ-chNG6");SML.di("./DX9Mw4w_.js",import.meta.url,"DX9Mw4w_");SML.di("./CpoKGso5.js",import.meta.url,"CpoKGso5");SML.di("./CMS2OfNt.js",import.meta.url,"CMS2OfNt");SML.di("./CdTGYlNw.js",import.meta.url,"CdTGYlNw");SML.di("./m_62dcKy.js",import.meta.url,"m_62dcKy");SML.di("./ZbquE2XF.js",import.meta.url,"ZbquE2XF");SML.di("./BrB3BiJ_.js",import.meta.url,"BrB3BiJ_");SML.di("./CAtfi8BE.js",import.meta.url,"CAtfi8BE");SML.di("./C-fouDgF.js",import.meta.url,"C-fouDgF");SML.di("./y7f18YYf.js",import.meta.url,"y7f18YYf");SML.di("./BHUYYzrx.js",import.meta.url,"BHUYYzrx");SML.di("./DD7scjFQ.js",import.meta.url,"DD7scjFQ");SML.di("./yHFcPWkl.js",import.meta.url,"yHFcPWkl");SML.di("./CGzEIBwW.js",import.meta.url,"CGzEIBwW");SML.di("./CnZCQZdH.js",import.meta.url,"CnZCQZdH");SML.di("./C_M_NGfT.js",import.meta.url,"C_M_NGfT");SML.di("./CWi6z3tG.js",import.meta.url,"CWi6z3tG");SML.di("./zIj5u43D.js",import.meta.url,"zIj5u43D");SML.di("./BsQJl0hY.js",import.meta.url,"BsQJl0hY");SML.di("./21VIldix.js",import.meta.url,"21VIldix");SML.di("./zrykt2nd.js",import.meta.url,"zrykt2nd");SML.di("./QAQY90ii.js",import.meta.url,"QAQY90ii");SML.di("./Ch8njlGJ.js",import.meta.url,"Ch8njlGJ");SML.di("./BIdLZLCw.js",import.meta.url,"BIdLZLCw");SML.di("./CYBj3-X8.js",import.meta.url,"CYBj3-X8");SML.di("./DiQwYZkp.js",import.meta.url,"DiQwYZkp");SML.di("./B-K8bCNo.js",import.meta.url,"B-K8bCNo");SML.di("./3bEj5-ZB.js",import.meta.url,"3bEj5-ZB");SML.di("./L-pRUMpq.js",import.meta.url,"L-pRUMpq");SML.di("./Chf2nmby.js",import.meta.url,"Chf2nmby");SML.di("./D-XYEw65.js",import.meta.url,"D-XYEw65");SML.di("./CEf0pl28.js",import.meta.url,"CEf0pl28");SML.di("./DEZJErJv.js",import.meta.url,"DEZJErJv");SML.di("./2tacFyfC.js",import.meta.url,"2tacFyfC");SML.di("./DdIwQUSk.js",import.meta.url,"DdIwQUSk");SML.di("./DkvSmkm1.js",import.meta.url,"DkvSmkm1");SML.di("./dbEOUwpN.js",import.meta.url,"dbEOUwpN");SML.di("./D-ZUgI2b.js",import.meta.url,"D-ZUgI2b");SML.di("./CU4mObWU.js",import.meta.url,"CU4mObWU");SML.di("./BBx1IrLH.js",import.meta.url,"BBx1IrLH");SML.di("./Dr7QH1e7.js",import.meta.url,"Dr7QH1e7");
SML.dm("DS9wxcla",["DVMhF-xZ","DN8NCGGW","DDco8exZ","CElIDZoh","Bahzn9My","DwsEu536","qCJremDI","BZ-chNG6","DX9Mw4w_","CpoKGso5","CMS2OfNt","CdTGYlNw","m_62dcKy","CAtfi8BE","C-fouDgF","y7f18YYf","DczBT2kf","DGY0b97R","YWXw6gDz","ChYc5yrF","DQaRMILU","CGYl-sUB","ZbquE2XF","BrB3BiJ_","BHUYYzrx","DD7scjFQ","yHFcPWkl","CGzEIBwW","CnZCQZdH","C_M_NGfT","CWi6z3tG","zIj5u43D","BsQJl0hY","21VIldix","zrykt2nd","QAQY90ii","Ch8njlGJ","BIdLZLCw","CYBj3-X8","DiQwYZkp","B-K8bCNo","3bEj5-ZB","L-pRUMpq","Chf2nmby","D-XYEw65","CEf0pl28","DEZJErJv","2tacFyfC","DdIwQUSk","DkvSmkm1","dbEOUwpN","D-ZUgI2b","CU4mObWU","BBx1IrLH","Dr7QH1e7"],(async(e,t,i,a,o,n,s,r,l,d,m,h,c,u,p,R)=>{let T=class extends t.s{constructor(){super(...arguments),this.buttonAppearance="secondary",this.buttonSize=e.$.Small,this.showFullButtons=!1,this.screeenReaderContent="",this.thingId="",this.smartEscalationsTracking=!1,this.isLargerThanSmallWindow=!0,this._handleModActionClick=t=>{this.dataModAction===o.M.AddRemovalReason&&t.stopPropagation(),this.dataModAction&&(this.dispatchEvent(e.c(this.dataModAction)),t.target&&this.noun&&e.a(t.target,e.b({source:"moderator",action:"click",noun:this.noun})))},this.mediaWatcher=null,this.handleMediaChange=e=>{this.isLargerThanSmallWindow=e.matches},this.renderWithTooltip=()=>t.x`<faceplate-tooltip appearance="inverted" position="top"> ${this.renderButton()} <slot name="text"></slot> </faceplate-tooltip>`,this.renderButton=()=>{const o=a.ac()?i.c:e.n,s=this.smartEscalationsTracking?t.x`<ac-track trigger="click" target="prev" san="moderator|click|remove" data-faceplate-tracking-context="${JSON.stringify({action_info:{source_name:"smart-escalations"},...(this.thingId&&n.i(this.thingId) && {post:{id:this.thingId}}),...(this.thingId&&n.a(this.thingId) && {comment:{id:this.thingId}})})}"></ac-track>`:"";return t.x`${o({appearance:this.buttonAppearance,attributes:{onclick:this._handleModActionClick,className:"relative",slot:"trigger","aria-label":this.screeenReaderContent},size:this.buttonSize,children:this.showFullButtons&&this.isLargerThanSmallWindow?t.x` <span> ${s} <slot name="text"></slot> </span> `:"",leadingIcon:this.showFullButtons&&this.isLargerThanSmallWindow?"":t.x` <span class="flex justify-center items-center"> <slot name="icon"></slot> </span> `})} ${s}`}}connectedCallback(){super.connectedCallback(),this.showFullButtons&&(this.mediaWatcher=window.matchMedia("(min-width: 768px)"),this.mediaWatcher.addEventListener("change",this.handleMediaChange))}disconnectedCallback(){super.disconnectedCallback(),this.mediaWatcher?.removeEventListener("change",this.handleMediaChange)}render(){return this.showFullButtons?this.renderButton():this.renderWithTooltip()}};T.styles=[e.t],t._([t.n({type:String,attribute:"data-mod-action"})],T.prototype,"dataModAction",void 0),t._([t.n({type:String,attribute:"event-noun"})],T.prototype,"noun",void 0),t._([t.n({type:String,attribute:"button-appearance"})],T.prototype,"buttonAppearance",void 0),t._([t.n({type:String,attribute:"button-size"})],T.prototype,"buttonSize",void 0),t._([t.n({type:Boolean,attribute:"show-full-buttons"})],T.prototype,"showFullButtons",void 0),t._([t.n({type:String,attribute:"screen-reader-content"})],T.prototype,"screeenReaderContent",void 0),t._([t.n({type:String,attribute:"thing-id"})],T.prototype,"thingId",void 0),t._([t.n({type:Boolean,attribute:"smart-escalations-tracking"})],T.prototype,"smartEscalationsTracking",void 0),t._([t.b()],T.prototype,"isLargerThanSmallWindow",void 0),T=t._([t.c("mod-action-button")],T);let I=class extends t.s{constructor(){super(...arguments),this.feedViewType=e.a4.ModQueueCompactView,this.viewContext=m.P.CommentsPage,this.itemState=c.M.UNMODERATED,this.hasReports=!1,this.isModMode=!1,this.isRemoved=!1,this.isDeleted=!1,this.isLocked=!1,this.isStickied=!1,this.isHighlighted=!1,this.isCurrentUserAuthor=!1,this.hasParent=!1,this.isIconOnly=!1,this.hasRemovalReason=!1,this.permalink="",this.isDesktopViewport=!1,this.isSpamFilteredPost=!1,this.isProfilePost=!1,this.isPromotedPost=!1,this.hasFlairPermissions=!1,this.areHighlightsEnabled=!1,this.hideInlineActions=!1,this.isSmartEscalations=!1,this.isContentLevelModsCommsEnabled=!1,this.modContentDiscussionContext=void 0,this.isFeedNoApproveEnabled=!1,this.focusChatTextareaFn=o.f,this.moderationState=c.M.UNMODERATED,this.pubsub=new e.P(this),this._handleThingUpdate=e=>{let t="";if("awardOnContentId"in e?t=e.awardOnContentId:"commentId"in e?t=e.commentId:"postId"in e&&(t=e.postId),t!==this.thingId)return;const{value:i}=e;switch(e.action){case h.a.approve:case d.C.approve:case l.A.approve:case d.C.approveOptimistic:this.hasRemovalReason=!1,this.isRemoved=!1,this.moderationState=c.M.APPROVED;break;case h.a.remove:case h.a.removeAsSpam:case h.a.confirmRemoval:case d.C.remove:case d.C.removeAsSpam:case d.C.confirmRemoval:case l.A.remove:case l.A.confirmRemoval:case d.C.removeOptimistic:case d.C.removeAsSpamOptimistic:case d.C.confirmRemovalOptimistic:this.isRemoved=!0,this.moderationState=c.M.REMOVED;break;case h.a.addRemovalReason:case d.C.addRemovalReason:this.hasRemovalReason=!0;break;case h.a.updateHighlightedPost:this.isHighlighted=i;break;case h.a.lock:case d.C.lock:this.isLocked=i;break;case h.a.delete:this.isDeleted=i;break;case h.a.sticky:case d.C.sticky:this.isStickied=i}}}get itemType(){return this.thingId?s.i(this.thingId):null}get isPost(){return this.itemType===e.M.Post}get isCompactView(){return this.feedViewType===e.a4.CompactView}get isOnModqueuePage(){return this.viewContext===m.P.ModQueue||this.viewContext===m.P.ModQueueAll}get isApproved(){return this.moderationState===c.M.APPROVED}get shouldShowConfirmRemoval(){return c.s(this.moderationState,this.isSpamFilteredPost)}get shouldShowActionInline(){return c.a(this.viewContext,this.feedViewType)&&!this.isIconOnly&&!this.hideInlineActions}get isStickyable(){const e=!(this.viewContext===m.P.ProfileFeed||this.viewContext===m.P.ProfileFeed2),t=this.isCurrentUserAuthor&&!this.hasParent;return this.isPost?e:e&&t}get itemTopic(){switch(this.itemType){case e.M.Award:return e.T.AwardOnContentUpdated;case e.M.Comment:return e.T.CommentUpdated;case e.M.Post:return e.T.PostUpdated;default:return null}}connectedCallback(){super.connectedCallback(),this.moderationState=this.itemState,this.itemTopic&&this.pubsub.subscribe(this.itemTopic,this._handleThingUpdate)}getApproveButtonAppearance(){const e=a.ac()?"bordered":"secondary";return this.isCompactView?e:this.shouldShowConfirmRemoval||this.hasReports?"primary":(this.moderationState,c.M.REMOVED,e)}renderApproveAction(){return (this.isModMode||this.isOnModqueuePage)&&c.b(this.moderationState)?this.isFeedNoApproveEnabled&&!this.isOnModqueuePage&&this.moderationState===c.M.UNMODERATED?null:t.x` <mod-action-button screen-reader-content="${"Approve content"}" data-mod-action="${o.M.ApproveContent}" button-appearance="${this.getApproveButtonAppearance()}" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${t.Q({attributes:{"aria-hidden":"true"},size:t.I.Small})}</span> <span slot="text">${"Approve"}</span> </mod-action-button> `:null;}renderRemoveAction(){return (this.isModMode||this.isOnModqueuePage)&&c.c(this.moderationState)?this.isFeedNoApproveEnabled&&!this.isOnModqueuePage&&this.moderationState===c.M.UNMODERATED?null:t.x` <mod-action-button screen-reader-content="${"Remove content"}" data-mod-action="${o.M.RemoveContent}" button-appearance="${a.ac()?"bordered":"secondary"}" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${t.m({attributes:{"aria-hidden":"true"},size:t.I.Small})}</span> <span slot="text"> ${"Remove"} </span> </mod-action-button> `:null;}renderConfirmRemovalAction(){return (this.isModMode||this.isOnModqueuePage)&&this.shouldShowConfirmRemoval?t.x` <mod-action-button screen-reader-content="${"Confirm Removal"}" data-mod-action="${o.M.ConfirmRemoval}" button-appearance="${a.ac()?"bordered":"secondary"}" ?show-full-buttons="${!this.isIconOnly}" thing-id="${t.l(this.thingId)}" ?smart-escalations-tracking="${this.isSmartEscalations}"> <span slot="icon" class="flex justify-center">${t.m({attributes:{"aria-hidden":"true"},size:t.I.Small})}</span> <span slot="text"> ${"Confirm Removal"} </span> </mod-action-button> `:null;}renderSpamAction(){return c.d({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline?t.x` <mod-action-button screen-reader-content="${"Remove content as spam"}" data-mod-action="${o.M.RemoveContentAsSpam}" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${t.bG({attributes:{"aria-hidden":"true"},size:t.I.Small})}</span> <span slot="text"> ${"Spam"} </span> </mod-action-button> `:null;}renderShareToModChatAction(){if(!c.e({isPromotedPost:this.isPromotedPost})||!this.isContentLevelModsCommsEnabled||!this.modContentDiscussionContext?.modChatChannel||!this.isOnModqueuePage||this.isOnModqueuePage&&!this.shouldShowActionInline&&!this.modContentDiscussionContext.modContentDiscussion)return null;let e=this.modContentDiscussionContext?.modContentDiscussion?`${u.g(this.modContentDiscussionContext.modContentDiscussion.chatChannel?.roomId,this.modContentDiscussionContext.modContentDiscussion.chatMessage?.id)}/thread`:u.a(this.modContentDiscussionContext?.modChatChannel?.roomId);this.modContentDiscussionContext?.modContentDiscussion||(e+=`?draft=${encodeURIComponent("https://www.reddit.com"+this.permalink)}`);const i=this.modContentDiscussionContext?.modContentDiscussion?o.M.ViewChatThread:o.M.ShareToModChat,a=this.modContentDiscussionContext?.modContentDiscussion?"Open chat thread":"Share to mod chat",n=this.modContentDiscussionContext?.modContentDiscussion?"Open chat thread":"Share to mod chat";return t.x` <faceplate-tracker source="moderator" action="click" noun="${this.modContentDiscussionContext?.eventContext?.noun}" data-faceplate-tracking-context="${JSON.stringify({subreddit:{id:this.modContentDiscussionContext?.eventContext?.subredditId,name:this.modContentDiscussionContext?.eventContext?.subredditName},post:{id:this.modContentDiscussionContext?.eventContext?.postId},...(this.modContentDiscussionContext?.eventContext?.roomId && {chat:{id:this.modContentDiscussionContext?.eventContext?.roomId}}),...(this.modContentDiscussionContext?.eventContext?.commentId && {comment:{id:this.modContentDiscussionContext?.eventContext?.commentId}})})}" slot="mod-share-to-mod-chat"> <share-to-mod-chat-coachmark location="${this.modContentDiscussionContext?.modContentDiscussion?"modQueueChat":"modQueue"}" view-context="${this.viewContext}"> <reddit-chat-anchor> <a href="${e}"> <div class="relative"> <mod-action-button screen-reader-content="${a}" button-appearance="plain" data-mod-action="${i}"> <span slot="icon" class="flex justify-center"> ${t.aD({attributes:{"aria-hidden":"true"},size:t.I.Small})} </span> <span slot="text"> ${n} </span> </mod-action-button> </div> </a> </reddit-chat-anchor> </share-to-mod-chat-coachmark> </faceplate-tracker> `;}renderFlairAction(){return this.isPost&&this.shouldShowActionInline?t.x` <mod-action-button screen-reader-content="${"Open post flair modal"}" data-mod-action="${o.M.OpenEditPostFlairModal}" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${t.b2({attributes:{"aria-hidden":"true"},size:t.I.Small})}</span> <span slot="text"> ${"Flair"} </span> </mod-action-button>`:null;}renderAddRemovalReasonAction(){return (this.isModMode||this.isOnModqueuePage)&&this.itemType!==e.M.Award&&c.f(this.moderationState,this.hasRemovalReason,this.isSpamFilteredPost,this.isProfilePost)?t.x` <mod-action-button screen-reader-content="${"Add removal reason"}" data-mod-action="${o.M.AddRemovalReason}" button-appearance="${a.ac()?"bordered":"secondary"}" ?show-full-buttons="${!0}"> <span slot="icon" class="flex justify-center">${t.D({attributes:{"aria-hidden":"true"},size:t.I.Small})}</span> <span slot="text"> ${"Add removal reason"} </span> </mod-action-button> ${this.isIconOnly?t.x`<div class="separator"></div>`:null} `:null;}renderCopyLinkAction(){return this.shouldShowActionInline?this.isPost?t.x`<shreddit-post-share-button ?use-button="${!0}" ?is-desktop-viewport="${this.isDesktopViewport}" permalink="${this.permalink}" size="${e.$.Small}" ?show-full-buttons="${!this.isIconOnly}"></shreddit-post-share-button>`:t.x`<shreddit-comment-share-button slot="comment-share" ?use-button="${!0}" ?is-desktop-viewport="${this.isDesktopViewport}" permalink="${this.permalink}" ?show-full-buttons="${!this.isIconOnly}"></shreddit-comment-share-button>`:null}renderLockAction(){if(!this.shouldShowActionInline||this.isLocked)return null;const e="Lock";return t.x` <mod-action-button screen-reader-content="${e}" data-mod-action="${o.M.Lock}" event-noun="lock" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${t.bD({attributes:{"aria-hidden":"true"},size:t.I.Small})} </span> <span slot="text"> ${e} </span> </mod-action-button>`}renderUnlockAction(){if(!this.shouldShowActionInline||!this.isLocked)return null;const e="Unlock";return t.x` <mod-action-button screen-reader-content="${e}" data-mod-action="${o.M.Unlock}" event-noun="unlock" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${t.aS({attributes:{"aria-hidden":"true"},size:t.I.Small})} </span> <span slot="text"> ${e} </span> </mod-action-button>`}renderStickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||this.isStickied||this.areHighlightsEnabled)return null;const e="Sticky";return t.x` <mod-action-button screen-reader-content="${e}" data-mod-action="${o.M.Sticky}" event-noun="sticky" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${t.bL({attributes:{"aria-hidden":"true"},size:t.I.Small})} </span> <span slot="text"> ${e} </span> </mod-action-button>`}renderUnstickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.isStickied||this.areHighlightsEnabled)return null;const e="Unsticky";return t.x` <mod-action-button screen-reader-content="${e}" data-mod-action="${o.M.Unsticky}" event-noun="unsticky" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${t.aT({attributes:{"aria-hidden":"true"},size:t.I.Small})} </span> <span slot="text"> ${e} </span> </mod-action-button>`}renderAddToHighlightsAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.areHighlightsEnabled||!r.H.has(this.viewContext)||this.isHighlighted)return null;const e="Add to highlights";return t.x` <mod-action-button screen-reader-content="${e}" data-mod-action="${o.M.UpdateHighlightedPost}" event-noun="highlight" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${t.bL({attributes:{"aria-hidden":"true"},size:t.I.Small})} </span> <span slot="text"> ${e} </span> </mod-action-button>`}renderRemoveFromHighlightsAction(){if(!(this.isStickyable&&this.shouldShowActionInline&&this.areHighlightsEnabled&&r.H.has(this.viewContext)&&this.isHighlighted))return null;const e="Remove from highlights";return t.x` <mod-action-button screen-reader-content="${e}" data-mod-action="${o.M.RemoveHighlightedPost}" event-noun="unhighlight" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${t.aT({attributes:{"aria-hidden":"true"},size:t.I.Small})} </span> <span slot="text"> ${e} </span> </mod-action-button>`}render(){return t.x` ${this.renderAddRemovalReasonAction()} ${this.renderApproveAction()} ${this.renderRemoveAction()} ${this.renderConfirmRemovalAction()} ${this.renderShareToModChatAction()} ${this.renderSpamAction()} ${this.renderFlairAction()} ${this.renderLockAction()} ${this.renderUnlockAction()} ${this.renderCopyLinkAction()} ${this.renderStickyAction()} ${this.renderUnstickyAction()} ${this.renderAddToHighlightsAction()} ${this.renderRemoveFromHighlightsAction()} `}};I.styles=[e.t,t.i`:host{display:flex;gap:var(--spacer-xs)}.separator{border-left:1px solid rgb(0,0,0,.1);width:1px;height:32px}`],t._([t.n({type:String,attribute:"thing-id"})],I.prototype,"thingId",void 0),t._([t.n({type:String,attribute:"feed-view-type"})],I.prototype,"feedViewType",void 0),t._([t.n({type:String,attribute:"view-context"})],I.prototype,"viewContext",void 0),t._([t.n({type:String,attribute:"item-state"})],I.prototype,"itemState",void 0),t._([t.n({type:Boolean,attribute:"has-reports"})],I.prototype,"hasReports",void 0),t._([t.n({type:Boolean,attribute:"mod-mode"})],I.prototype,"isModMode",void 0),t._([t.n({type:Boolean,attribute:"removed"})],I.prototype,"isRemoved",void 0),t._([t.n({type:Boolean,attribute:"deleted"})],I.prototype,"isDeleted",void 0),t._([t.n({type:Boolean,attribute:"locked"})],I.prototype,"isLocked",void 0),t._([t.n({type:Boolean,attribute:"stickied"})],I.prototype,"isStickied",void 0),t._([t.n({type:Boolean,attribute:"highlighted"})],I.prototype,"isHighlighted",void 0),t._([t.n({type:Boolean,attribute:"current-user-author"})],I.prototype,"isCurrentUserAuthor",void 0),t._([t.n({type:Boolean,attribute:"has-parent"})],I.prototype,"hasParent",void 0),t._([t.n({type:Boolean,attribute:"icon-only"})],I.prototype,"isIconOnly",void 0),t._([t.n({type:Boolean,attribute:"has-removal-reason"})],I.prototype,"hasRemovalReason",void 0),t._([t.n({type:String,attribute:"permalink"})],I.prototype,"permalink",void 0),t._([t.n({type:Boolean,attribute:"is-desktop-viewport"})],I.prototype,"isDesktopViewport",void 0),t._([t.n({type:Boolean,attribute:"is-spam-filtered-post"})],I.prototype,"isSpamFilteredPost",void 0),t._([t.n({type:Boolean,attribute:"is-profile-post"})],I.prototype,"isProfilePost",void 0),t._([t.n({type:Boolean,attribute:"is-promoted-post"})],I.prototype,"isPromotedPost",void 0),t._([t.n({type:Boolean,attribute:"has-flair-permissions"})],I.prototype,"hasFlairPermissions",void 0),t._([t.n({type:Boolean,attribute:"highlights-enabled"})],I.prototype,"areHighlightsEnabled",void 0),t._([t.n({type:Boolean,attribute:"hide-inline-actions"})],I.prototype,"hideInlineActions",void 0),t._([t.n({type:Boolean,attribute:"smart-escalations"})],I.prototype,"isSmartEscalations",void 0),t._([t.n({type:Boolean,attribute:"is-content-level-mods-comms-enabled"})],I.prototype,"isContentLevelModsCommsEnabled",void 0),t._([t.n({type:Object,attribute:"mod-content-discussion-context"})],I.prototype,"modContentDiscussionContext",void 0),t._([t.n({type:Boolean,attribute:"is-feed-no-approve-enabled"})],I.prototype,"isFeedNoApproveEnabled",void 0),t._([t.n({attribute:!1})],I.prototype,"focusChatTextareaFn",void 0),t._([t.b()],I.prototype,"moderationState",void 0),I=t._([t.c("shreddit-mod-inline-actions")],I);let N=class extends p.M{constructor(){super(...arguments),this.hasParent=!1,this.pubsub=new e.P(this),this.handleCommentUpdate=({commentId:t,action:i,value:a})=>{if(t===this.thingId)switch(i){case d.C.lock:this.isLocked=Boolean(a);break;case d.C.sticky:this.isStickied=Boolean(a);break;case d.C.distinguishAsMod:this.distinguishedAs=a?e.bc.Moderator:void 0;break;case d.C.distinguishAsAdmin:this.distinguishedAs=a?e.bc.Admin:void 0;break;case d.C.approve:case d.C.approveOptimistic:this.isRemoved=!1,this.hasRemovalReason=!1,this.verdict=e.a3.ModApproved,this.itemState=c.M.APPROVED,this.hasReports=!1;break;case d.C.remove:case d.C.removeAsSpam:case d.C.confirmRemoval:case d.C.removeOptimistic:case d.C.removeAsSpamOptimistic:case d.C.confirmRemovalOptimistic:this.isRemoved=!0,this.verdict=e.a3.ModRemoved,this.itemState=c.M.REMOVED,this.hasReports=!1;break;case d.C.addRemovalReason:this.hasRemovalReason=Boolean(a);break;case d.C.ignoreReports:this.isReportingIgnored=Boolean(a),a&&(this.isRemoved=!1,this.verdict=e.a3.ModApproved,this.itemState=c.M.APPROVED)}}}get isStickyable(){return super.isStickyable&&this.isCurrentUserAuthor&&!this.hasParent}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(e.T.CommentUpdated,this.handleCommentUpdate)}renderActions(){return [this.renderConfirmRemovalAction(),this.renderApproveAction(),this.renderRemoveAction(),this.isContentLevelModsCommsEnabled?this.renderShareToModChatAction(this.modContentDiscussionContext):null,this.renderSpamAction(),this.renderIgnoreReportsAction(),this.renderUnignoreReportsAction(),this.renderAddRemovalReasonAction(),this.renderDistinguishAction(),this.renderUndistinguishAction(),this.renderStickyAction("Sticky comment"),this.renderUnstickyAction("Unsticky comment"),this.renderLockAction("Lock comment"),this.renderUnlockAction("Unlock comment"),this.renderCopyLinkAction()];}};t._([t.n({type:Boolean,attribute:"has-parent"})],N.prototype,"hasParent",void 0),N=t._([t.c("shreddit-comment-mod-actions-menu")],N);let k=class extends p.M{constructor(){super(...arguments),this.isNsfw=!1,this.isSpoiler=!1,this.pubsub=new e.P(this),this._handlePostUpdate=({postId:t,action:i,value:a})=>{if(t===this.thingId)switch(i){case h.a.lock:this.isLocked=Boolean(a);break;case h.a.sticky:this.isStickied=Boolean(a);break;case h.a.updateHighlightedPost:this.isHighlighted=Boolean(a);break;case h.a.distinguishAsMod:this.distinguishedAs=a?e.bc.Moderator:void 0;break;case h.a.approveOptimistic:case h.a.approve:this.isRemoved=!1,this.hasRemovalReason=!1,this.verdict=e.a3.ModApproved,this.itemState=c.M.APPROVED,this.hasReports=!1,this.requestUpdate();break;case h.a.remove:case h.a.removeAsSpam:case h.a.confirmRemoval:case h.a.removeOptimistic:case h.a.removeAsSpamOptimistic:case h.a.confirmRemovalOptimistic:this.isRemoved=!0,this.verdict=e.a3.ModRemoved,this.itemState=c.M.REMOVED,this.hasReports=!1;break;case h.a.addRemovalReason:this.hasRemovalReason=Boolean(a);break;case h.a.markAsNsfw:this.isNsfw=Boolean(a);break;case h.a.markAsSpoiler:this.isSpoiler=Boolean(a);break;case h.a.ignoreReports:this.isReportingIgnored=Boolean(a),a&&(this.isRemoved=!1,this.verdict=e.a3.ModApproved,this.itemState=c.M.APPROVED)}}}get isStickyable(){return super.isStickyable}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(e.T.PostUpdated,this._handlePostUpdate)}renderMarkAsNsfwAction(){return this.isDeleted||this.isNsfw?null:R.l({leadingIcon:t.c7(),label:"Add NSFW tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleMarkNsfw)});}renderUnmarkAsNsfwAction(){return this.isDeleted||!this.isNsfw?null:R.l({leadingIcon:t.a9(),label:"Remove NSFW tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleUnmarkNsfw)});}renderMarkAsSpoilerAction(){return this.isDeleted||this.isSpoiler?null:R.l({leadingIcon:t.aN(),label:"Add spoiler tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleMarkSpoiler)});}renderUnmarkAsSpoilerAction(){return this.isDeleted||!this.isSpoiler?null:R.l({leadingIcon:t.H(),label:"Remove spoiler tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleUnmarkSpoiler)});}renderAdjustCrowdControlAction(){return this.isPromotedPost?null:R.l({leadingIcon:t.c8(),label:"Adjust crowd control",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleAdjustCrowdControl)});}renderActions(){return [this.renderConfirmRemovalAction(),this.renderApproveAction(),this.renderRemoveAction(),this.isContentLevelModsCommsEnabled?this.renderShareToModChatAction(this.modContentDiscussionContext):null,this.renderSpamAction(),this.renderIgnoreReportsAction(),this.renderUnignoreReportsAction(),this.renderAddRemovalReasonAction(),this.renderDistinguishAction(),this.renderUndistinguishAction(),this.renderStickyAction("Sticky post"),this.renderUnstickyAction("Unsticky post"),this.renderAddToHighlightsAction(),this.renderRemoveFromHighlightsAction(),this.renderLockAction("Lock comments"),this.renderUnlockAction("Unlock comments"),this.renderEditPostFlairAction("Edit post flair"),this.renderMarkAsNsfwAction(),this.renderUnmarkAsNsfwAction(),this.renderMarkAsSpoilerAction(),this.renderUnmarkAsSpoilerAction(),this.renderAdjustCrowdControlAction(),this.renderCopyLinkAction()];}};t._([t.n({type:Boolean,attribute:"nsfw"})],k.prototype,"isNsfw",void 0),t._([t.n({type:Boolean,attribute:"spoiler"})],k.prototype,"isSpoiler",void 0),k=t._([t.c("shreddit-post-mod-actions-menu")],k);let E=class extends t.s{constructor(){super(...arguments),this.isEnoughParentWidth=!1,this.removed=!1,this.thingId="",this.shouldIgnoreParentWidth=!1,this.pubsub=new e.P(this),this.minWidthToShowLabel=460,this.onCommentUpdateAction=e=>{if(e.commentId!==this.thingId)return;const{action:t}=e;switch(t){case d.C.approve:case d.C.approveOptimistic:this.removed=!1;break;case d.C.remove:case d.C.removeAsSpam:case d.C.confirmRemoval:case d.C.removeOptimistic:case d.C.removeAsSpamOptimistic:case d.C.confirmRemovalOptimistic:this.removed=!0}},this.onPostUpdateAction=e=>{if(e.postId!==this.thingId)return;const{action:t}=e;switch(t){case h.a.approve:case h.a.approveOptimistic:this.removed=!1;break;case h.a.remove:case h.a.removeAsSpam:case h.a.confirmRemoval:case h.a.removeOptimistic:case h.a.removeAsSpamOptimistic:case h.a.confirmRemovalOptimistic:this.removed=!0}},this.onAwardOnContentUpdateAction=e=>{if(e.awardOnContentId!==this.thingId)return;const{action:t}=e;switch(t){case l.A.approve:this.removed=!1;break;case l.A.remove:case l.A.confirmRemoval:this.removed=!0}}}connectedCallback(){this.initializeResizeObserver(),this.pubsub.subscribe(e.T.PostUpdated,this.onPostUpdateAction),this.pubsub.subscribe(e.T.CommentUpdated,this.onCommentUpdateAction),this.pubsub.subscribe(e.T.AwardOnContentUpdated,this.onAwardOnContentUpdateAction),super.connectedCallback()}disconnectedCallback(){this.resizeObserver?.disconnect(),super.disconnectedCallback()}initializeResizeObserver(){const e=s.g(this);e&&(this.resizeObserver=new ResizeObserver((e=>{for(const t of e){const e=t.contentRect.width>=this.minWidthToShowLabel;e!==this.isEnoughParentWidth&&(this.isEnoughParentWidth=e)}})),this.resizeObserver.observe(e))}render(){return t.x` <span class="inline-flex items-center gap-xs text-12 text-neutral-content w-full"> <div class="relative"> <slot name="verdict-indicator-avatar"></slot> <div aria-hidden="true" class="absolute bottom-0 -right-px flex justify-center items-center h-md w-md rounded-full border-solid border-md border-neutral-background scale-75 origin-bottom-right translate-y-px ${this.removed?"bg-red-200 text-red-700":"bg-kiwigreen-200 text-kiwigreen-700"}"> ${this.removed?t.ag({size:t.I.ExtraSmall}):t.C({size:t.I.ExtraSmall})} </div> </div> ${this.shouldShowLabel?t.x`<slot name="verdict-indicator-label"></slot>`:""} </span> `}get shouldShowLabel(){return this.shouldIgnoreParentWidth||this.isEnoughParentWidth}};E.styles=[e.t],t._([t.b()],E.prototype,"isEnoughParentWidth",void 0),t._([t.n({type:Boolean,reflect:!0})],E.prototype,"removed",void 0),t._([t.n({type:String,attribute:"thing-id"})],E.prototype,"thingId",void 0),t._([t.n({type:Boolean,attribute:"ignore-parent-width"})],E.prototype,"shouldIgnoreParentWidth",void 0),E=t._([t.c("mod-verdict-indicator-component")],E);let g=class extends t.s{constructor(){super(...arguments),this.iconOnly=!1,this.pubsub=new e.P(this),this.handleCommentUpdate=({commentId:e,action:t,value:i})=>{if(e===this.thingId)switch(t){case d.C.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case d.C.approve:case d.C.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case d.C.remove:case d.C.removeAsSpam:case d.C.removeOptimistic:case d.C.removeAsSpamOptimistic:case d.C.confirmRemovalOptimistic:this.hasRemovalReason=!1,this.isRemoved=!0}},this.handlePostUpdate=({postId:e,action:t,value:i})=>{if(e===this.thingId)switch(t){case h.a.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case h.a.approve:case h.a.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case h.a.remove:case h.a.removeAsSpam:case h.a.removeOptimistic:case h.a.removeAsSpamOptimistic:case h.a.confirmRemovalOptimistic:this.isRemoved=!0,this.hasRemovalReason=!1}},this.updateModVerdict=e=>{const t=this.closest('[slot="mod-verdict"]');e&&this.isRemoved?t?.setAttribute("show-removal-reason-cta",""):t?.removeAttribute("show-removal-reason-cta")},this.shouldShowCta=()=>{const e=this.isRemoved?c.M.REMOVED:c.M.UNMODERATED;return c.f(e,!!this.hasRemovalReason,!!this.isContentSpamFilteredPost,this.isProfilePost)}}connectedCallback(){super.connectedCallback();const t=s.g(this);this.resizeObserver=new ResizeObserver((e=>{for(const t of e)t.contentRect.width<500?this.iconOnly=!0:this.iconOnly=!1})),t&&this.resizeObserver.observe(t),this.pubsub.subscribe(e.T.CommentUpdated,this.handleCommentUpdate),this.pubsub.subscribe(e.T.PostUpdated,this.handlePostUpdate),this.updateModVerdict(!this.hasRemovalReason)}disconnectedCallback(){super.disconnectedCallback();const e=s.g(this);e&&this.resizeObserver.unobserve(e),this.resizeObserver.disconnect()}updated(e){super.updated(e),e.has("hasRemovalReason")&&this.updateModVerdict(!this.hasRemovalReason)}render(){return this.hasRemovalReason||!this.shouldShowCta()?t.A:t.x` <mod-action-button screen-reader-content="${"Add removal reason"}" data-mod-action="${o.M.AddRemovalReason}" button-appearance="secondary" ?show-full-buttons="${!0}"> <span slot="icon" class="flex justify-center"> ${t.D({attributes:{"aria-hidden":"true"},size:t.I.Small})} </span> <span slot="text" class="flex"> ${this.iconOnly?t.D({attributes:{"aria-hidden":"true"},size:t.I.Small}):"Add removal reason"} </span> </mod-action-button> `;}};g.styles=[e.t],t._([t.n({type:String,attribute:"thing-id"})],g.prototype,"thingId",void 0),t._([t.n({type:Boolean,attribute:"has-removal-reason"})],g.prototype,"hasRemovalReason",void 0),t._([t.b()],g.prototype,"iconOnly",void 0),t._([t.n({type:Boolean,attribute:"is-removed"})],g.prototype,"isRemoved",void 0),t._([t.n({type:Boolean,attribute:"is-content-spam-filtered-post"})],g.prototype,"isContentSpamFilteredPost",void 0),t._([t.n({type:Boolean,attribute:"is-profile-post"})],g.prototype,"isProfilePost",void 0),g=t._([t.c("responsive-add-removal-reason-cta")],g)}));