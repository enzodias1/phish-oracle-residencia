<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-8520</id><updated>2025-09-16T13:11:45.019-04:00</updated><category term="pycon"/><category term="community"/><category term="community service awards"/><category term="pypi"/><category term="PSF"/><category term="award"/><category term="board"/><category term="grants"/><category term="open source"/><category term="election"/><category term="python"/><category term="conference"/><category term="education"/><category term="grant"/><category term="advocacy"/><category term="diversity"/><category term="development"/><category term="Board of Directors"/><category term="organization"/><category term="sponsorship"/><category term="democracy"/><category term="outreach"/><category term="sprints"/><category term="volunteer"/><category term="contributions"/><category term="membership"/><category term="nominations"/><category term="pip"/><category term="public relations"/><category term="service"/><category term="BBC"/><category term="deadlines"/><category term="edu-sig"/><category term="europython"/><category term="job board"/><category term="python 3.0"/><category term="summerofcode"/><category term="Caribbean"/><category term="children"/><category term="coding literacy"/><category term="donations"/><category term="events"/><category term="foundation"/><category term="meeting"/><category term="porting"/><category term="regional"/><category term="uk"/><category term="user groups"/><category term="usergroups advocacy"/><category term="volunteers"/><category term="CSA"/><category term="Cuba"/><category term="MicroPython"/><category term="PSF funding"/><category term="brochure"/><category term="call"/><category term="conferences"/><category term="ecosystem"/><category term="help"/><category term="infrastructure"/><category term="italy"/><category term="nominate"/><category term="non-profit"/><category term="opportunity"/><category term="oscon"/><category term="python3"/><category term="scipy"/><category term="support"/><category term="travel"/><category term="Asia-Pacific"/><category term="GHOP"/><category term="Google Summer of Code"/><category term="PyLadies"/><category term="Scientific Computing"/><category term="South America"/><category term="Working Group"/><category term="Young Coders"/><category term="arkansas"/><category term="documentation"/><category term="jobs"/><category term="micro:bit"/><category term="new zealand"/><category term="pycon2018"/><category term="request for proposals"/><category term="submissions"/><category term="winners"/><category term="2012"/><category term="Africa"/><category term="C"/><category term="CPython"/><category term="Call for Proposals"/><category term="Django Girls"/><category term="Dominican Republic"/><category term="Japan"/><category term="Memories of Lost Time"/><category term="NumFocus"/><category term="PyCaribbean"/><category term="PyOhio"/><category term="Santo Domingo"/><category term="Science"/><category term="ads"/><category term="aid"/><category term="assistance"/><category term="associate"/><category term="australia"/><category term="buildbot"/><category term="calendar"/><category term="canada"/><category term="codeofconduct"/><category term="conduct"/><category term="continuous integration"/><category term="director"/><category term="distinctive service award"/><category term="e-vote"/><category term="email"/><category term="employment"/><category term="france"/><category term="frank-willison. Young Coders"/><category term="fsf"/><category term="germany"/><category term="gsoc"/><category term="hardware"/><category term="hiring"/><category term="india"/><category term="kivy"/><category term="language"/><category term="linux journal"/><category term="marketing"/><category term="matplotlib"/><category term="mentoring"/><category term="microbit"/><category term="microsoft"/><category term="migration"/><category term="packaging"/><category term="poland"/><category term="print"/><category term="project"/><category term="pycon2011"/><category term="pycon2016"/><category term="pydotorg"/><category term="pypy"/><category term="quality"/><category term="readers choice"/><category term="setuptools"/><category term="sponso"/><category term="strategy"/><category term="students"/><category term="talks"/><category term="trademark"/><category term="tragedy"/><category term="tuf"/><category term="tutorials"/><category term="user experience"/><category term="videos"/><category term="voting"/><category term="women"/><category term="yearinreview"/><title type='text'>Python Software Foundation News</title><subtitle type='html'>  News from the Python Software Foundation</subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='https://pyfound.blogspot.com/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/'/><link rel='hub' href='http://pubsubhubbub.appspot.com/'/><link rel='next' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default?start-index=26&amp;max-results=25'/><author><name>Ee Durbin</name><uri>http://www.blogger.com/profile/13577459520968677064</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>715</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-8520.post-1710446568482960176</id><published>2025-09-16T13:11:00.000-04:00</published><updated>2025-09-16T13:11:44.962-04:00</updated><title type='text'>Announcing the 2025 PSF Board Election Results!</title><content type='html'>&lt;p&gt;The 2025 election for the PSF Board created an opportunity for conversations about the PSF&#39;s work to serve the global Python community. We appreciate community members&#39; perspectives, passion, and engagement in the election process this year.&amp;nbsp;&lt;/p&gt;&lt;p&gt;We want to send a big thanks to everyone who ran and was willing to serve on the PSF Board. Even if you were not elected, we appreciate all the time and effort you put into thinking about how to improve the PSF and represent the parts of the community you participate in. We hope that you will continue to think about these issues, share your ideas, and join a PSF Work Group or PSF initiative if you feel called to do so.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Board Members Elect&lt;/h2&gt;&lt;p&gt;Congratulations to our two new and two returning Board members who have been elected!&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Abigail Dogbe&lt;/li&gt;&lt;li&gt;Jannis Leidel&lt;/li&gt;&lt;li&gt;Sheena O’Connell&lt;/li&gt;&lt;li&gt;Simon Willison&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We’ll be in touch with all the elected candidates shortly to schedule onboarding. Newly elected PSF Board members are provided orientation for their service and will be joining the upcoming board meeting.&amp;nbsp;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Thank you!&lt;/h2&gt;&lt;p&gt;We’d like to take this opportunity to thank our outgoing board members. Kushal Das has been serving on the PSF Board for over ten years– WOW! Kushal has been a part of change after change for the PSF and Python community, serving in PSF Board officer positions, and we are incredibly grateful for his contributions. Dawn Wages quickly became an integral part of the Board during her tenure, stepping up as Treasurer and then Board Chair. Dawn helped guide us through a period of major change– navigating a difficult economy, adapting to the rise of AI, and supporting important shifts in our programs. Thank you, Kushal and Dawn, for your leadership and dedication to the PSF and the Python community. You will be missed and are deeply appreciated!&amp;nbsp;&lt;/p&gt;&lt;p&gt;Our heartfelt thanks go out to each of you who took the time to review the candidates and submit your votes. Your participation helps the PSF represent our community. We received 683 total ballots, easily reaching quorum–1/3 of affirmed voting members (929). We’re especially grateful for your patience with continuing to navigate the changes to the election processes and schedule, which allows for a valid election and a more sustainable election system.&lt;br /&gt;&lt;br /&gt;We also want to thank everyone who helped promote this year’s board election, especially Board Members Cristián Maureira-Fredes and Georgi Ker, who took the initiative to cover this year’s election and produced informational videos for our candidates. This promotional effort was inspired by the work of &lt;a href=&quot;https://pythoncommunitynews.com/&quot; target=&quot;_blank&quot;&gt;Python Community News&lt;/a&gt; in 2023. We also want to highlight the PSF staff members and PSF Board members who put in tons of effort each year as we work to continually improve the PSF elections.&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;What’s next?&lt;/h2&gt;&lt;p&gt;If you’re interested in the complete tally, make sure to check the &lt;a href=&quot;https://opavote.com/results/6226848987480064&quot; target=&quot;_blank&quot;&gt;Python Software Foundation Board of Directors Election 2025 Results page&lt;/a&gt;. &lt;i&gt;These results will be available until Nov 11, 2025.&lt;/i&gt;&lt;/p&gt;&lt;p&gt;The PSF Election team will conduct a retrospective of this year’s election process to ensure we are improving year over year. We received valuable feedback about the process and tooling. We hope to be able to implement more changes for next year to ensure a smooth and accessible election process for everyone in our community.&lt;/p&gt;&lt;p&gt;Finally, it might feel a little early to mention this, but we will have at least 3 seats open again next year. If you&#39;re interested in running or learning more, we encourage you to contact a current PSF Board member or two this year and ask them about their experience serving on the board.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/1710446568482960176'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/1710446568482960176'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/09/announcing-2025-psf-board-election.html' title='Announcing the 2025 PSF Board Election Results!'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-11481144259251736</id><published>2025-09-10T06:30:00.002-04:00</published><updated>2025-09-10T09:30:35.906-04:00</updated><title type='text'>Sprints are the best part of a conference</title><content type='html'>&lt;span id=&quot;docs-internal-guid-eb54691c-7fff-d1e5-10e8-feb3668e2453&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;When I first started attending Python conferences, my focus was entirely on the talks on the schedule. That&#39;s not surprising, there&#39;s no conference without talks! Over the years, though, I came to appreciate the so-called hallway track and the usual post-conference sprints that many events include. These days, I mostly come for those. Let&#39;s talk about why.&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Raw numbers&lt;/h2&gt;&lt;span&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;Before we get into subjective and soft reasons why sprints are great, just consider how productive they are for Python. To give you an idea, let&#39;s focus on three Python conferences of different sizes on three continents.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;At PyCon US 2025, 370 new PRs were open to the Python organization during, 286 to the &lt;/span&gt;&lt;span style=&quot;background-color: #f8f8f8; color: #333333; font-family: &amp;quot;Courier New&amp;quot;, monospace; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;cpython&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt; repository alone. Close to 300 PRs were merged into the Python GitHub organization during that time. That&#39;s for four days of sprints. This is over 2X the number of PRs handled during the same period when there&#39;s no sprint happening.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;There&#39;s been two days of sprints at EuroPython in Prague this year, but they didn&#39;t disappoint either: 122 new PRs open to the Python organization, including 99 to the &lt;/span&gt;&lt;span style=&quot;background-color: #f8f8f8; color: #333333; font-family: &amp;quot;Courier New&amp;quot;, monospace; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;cpython&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt; repository. 79 PRs were merged into the Python GitHub organization during this time. This is 1.75X the number of PRs handled during a typical weekend.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;Even single-day sprint days at conferences are pretty productive. At PyCon Korea earlier this August the attendees managed to open 59 new PRs to the Python organization, including 35 PRs to the &lt;/span&gt;&lt;span style=&quot;background-color: #f8f8f8; color: #333333; font-family: &amp;quot;Courier New&amp;quot;, monospace; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;cpython&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt; repository. Over 40 PRs were merged into the Python organization that day. Still 1.7X the typical velocity.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;Hopefully, you&#39;re seeing what I&#39;m seeing: sprints can provide a measurable boost to an open-source project. The longer the sprints are, the bigger this boost is. This is because many contributions need more than a day to bake, some bugs can be pretty stubborn, and many features uncover surprising depth once you start implementing them.&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Momentum&lt;/h2&gt;&lt;span&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;There&#39;s something magical about a large group of people banding together to attack problems. While this is what open source is in general, adding together physical presence in the same physical space at the same time is the secret sauce. Real-time coordination really is more efficient. We can guess at reasons for this, but we can safely assume a big part is simply that humans are social animals. It&#39;s easier to empathize with a person when they&#39;re in the same room with you. In my experience, pointing at a screen still beats Internet communication.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;Part of what makes sprints so productive is that it is a time-boxed period of uninterrupted time away from your usual work environment. And that&#39;s true for everyone, so people have the ability to focus on a specific project or problem for an extended period of time. But since there&#39;s a time limit to how long the sprints are, there&#39;s also some productive pressure to ship something concrete by the end of your stay. So, it&#39;s rare to see people playing games or doomscrolling during sprints. Instead, they want to ship something, even if it&#39;s a humble small first contribution.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;Better yet, after you spend some time with a person in real life, even online interactions with them afterwards change. My brain does this thing where it reads GitHub comments of people I know in their voice. This little thing additionally humanizes the pixels on screen and makes the interaction smoother. When you come to sprints, you build more lasting connections, because you don&#39;t only talk about stuff in the hallway, you&#39;re solving problems together.&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;You&#39;re getting for free what you wouldn&#39;t be able to buy if you tried&lt;/h2&gt;&lt;span&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;You&#39;re solving problems together alongside developers from different companies, backgrounds and specialties. Some of them are maintainers of the projects you&#39;re contributing to, with a wealth of expertise they&#39;re sharing freely. You get immediate feedback, you can learn at a rate that is impossible to match online. You learn not only by doing and asking questions, but even just by watching others work. You discover better tools or ways to use them you didn&#39;t know existed.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;To put it bluntly, the experts you work with during sprints would be impossible to hire as tutors, and here you get to work with them free of charge. Think about it, that alone makes it worth staying for sprints. And don&#39;t get cold feet, either, because...&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;You belong&lt;/h2&gt;&lt;span&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;I&#39;ve heard some newcomers are worried that maybe the expected experience level is too high. I say you will definitely find something productive to do. I even blogged about this specifically for PyCon US this year, so you can read &quot;&lt;/span&gt;&lt;a href=&quot;https://pycon.blogspot.com/2025/04/pyconus-sprints.html&quot; style=&quot;text-decoration-line: none; text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #4078c0; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;What to Expect at PyCon US Sprints&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;&quot; to get an idea about how to make your experience great. The PyCon Korea sprint organizer and Steering Council member Donghee Na says: &quot;I notice that the participants who had a good experience at last year&#39;s sprint tend to rejoin the sprint this year. I hope that many of them come back next year too.&quot; I&#39;m seeing the same thing, and want to see even more of it. We do care about your experience.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;Specifically at PyCon US, this year we tried something new. We split the CPython sprint room into two rooms: one dedicated to first-time contributors, and one to seasoned developers that needed to focus on some feature or bugfix they really wanted to ship before leaving Pittsburgh. It turned out great. Talking to attendees on both ends, I think both rooms enjoyed this setup and we will be repeating that for next year. While I was coordinating the first-time contributor room, I was heartened to see that quite a few veteran core developers joined me in the room. It was fun all four days!&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;At EuroPython, the setup this year was such that Petr Viktorin and I were coordinating the CPython sprint... or so we thought! In parallel, Adam Turner was leading the CPython documentation sprint, but attendees responded so well to him that he quickly organically became the de facto leader of the entire CPython sprint. Kudos, Adam, you did great!&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Dedicated sprint events&lt;/h2&gt;&lt;span&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;It&#39;s not all roses with sprints that are attached to conferences. After an intense few days of the larger event, people tend to get tired. Introverts run out of steam. Key people that you could use talking to don&#39;t stay or are only available on the first day. If only there could be an event where core developers gather for a week just to sprint. No distracting talks and hallway tracks!&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;CPython actually does this annually &lt;/span&gt;&lt;a href=&quot;https://blog.python.org/2016/09/python-core-development-sprint-2016-36.html&quot; style=&quot;text-decoration-line: none; text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #4078c0; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;since 2016&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt; with the obvious online-only hiccup of 2020 and 2021. We do love those sprints as they are both productive and fun. Last year we &lt;/span&gt;&lt;a href=&quot;https://hugovk.dev/blog/2024/python-core-developer-sprint-2024/&quot; style=&quot;text-decoration-line: none; text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #4078c0; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;returned to Meta&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt; while this year &lt;/span&gt;&lt;a href=&quot;https://discuss.python.org/t/2025-core-dev-sprint-15th-19th-september-at-arm-ltd-in-cambridge-uk/71909&quot; style=&quot;text-decoration-line: none; text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #4078c0; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;we will be sprinting at Arm Ltd in Cambridge UK&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;. Unlike the conference sprints, this is an invite-only event for core developers where we can focus on making the next version of Python shinier than it would otherwise be.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;But maybe organizing sprint-first events makes sense in general? It seems to me like that could be pretty helpful. Or maybe this is already a thing? Let us know if you know of sprint-first events in your area.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.96364; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #333333; font-size: 12pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;And in the meantime, consider staying for sprints at the next conference you&#39;re attending. It&#39;s well worth it!&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/span&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/11481144259251736'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/11481144259251736'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/09/sprints-are-best-part-of-conference.html' title='Sprints are the best part of a conference'/><author><name>Łukasz Langa</name><uri>http://www.blogger.com/profile/01161413896843370614</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='32' src='//blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi0eNJsbYbs-q-tZAExGK4rL3OKqKyufuMWsVc6UZFFpneSdr9AqAnf6XLnJsjHPYfVVZPzRop8XRSJ-V1sibK3GOBRwAjZd6aLwxVgenfucrA2JH9P-0cZRJiVj8YyJHE/s220/llanga1600x1600.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-172170502486587461</id><published>2025-09-02T10:02:00.000-04:00</published><updated>2025-09-02T10:02:33.634-04:00</updated><title type='text'>The 2025 PSF Board Election is Open!</title><content type='html'>&lt;p&gt;It’s time to cast your vote! Voting for the 2025 PSF Board Election is open starting today Tuesday, September 2nd, 2:00 pm UTC, through Tuesday, September 16th, 2:00 pm UTC.&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;How to Vote&lt;/h2&gt;&lt;p&gt;If you are a voting member of the PSF who &lt;a href=&quot;https://pyfound.blogspot.com/2025/07/affirm-your-psf-membership-voting-status.html&quot; target=&quot;_blank&quot;&gt;affirmed your intention to participate&lt;/a&gt; in this year’s election or you voted in last year’s election, you will receive an email today from “OpaVote Voting Link &amp;lt;noreply@opavote.com&amp;gt;” with a link to your ballot. The subject line will read “Python Software Foundation Board of Directors Election 2025”. If you haven’t seen your ballot by Wednesday, please first check your spam folder for a message from “noreply@opavote.com”. If you can’t find the ballot email from OpaVote please get in touch by emailing psf-elections@pyfound.org so we can look into your account and make sure we have the most up-to-date email for you.&lt;/p&gt;&lt;p&gt;Four seats on the board are open, but you can vote to approve as many of the 13 candidates as you like. We’re delighted by how many of you are willing to contribute to the Python community by serving on the PSF Board! Make sure you take some time to look at all &lt;a href=&quot;https://www.python.org/nominations/elections/2025-python-software-foundation-board/nominees/&quot; target=&quot;_blank&quot;&gt;the nominee statements&lt;/a&gt; and choose your candidates carefully.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;b&gt;ATTN:&lt;/b&gt; Choose carefully before you press the &lt;b&gt;&lt;span style=&quot;color: #38761d;&quot;&gt;big green vote button&lt;/span&gt;&lt;/b&gt;. Once your vote is cast, it cannot be changed.&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Who can vote?&amp;nbsp;&lt;/h2&gt;&lt;p&gt;You need to be a Contributing, Supporting, or Fellow member and have affirmed your voting intention by August 26th, 2:00 pm UTC, to vote in this election. Per last year’s Bylaw change that allows for &lt;a href=&quot;https://github.com/python/psf-bylaws/compare/a35a6071de181adbb7a160d5d1447e7b0272359c...6bac449&quot; target=&quot;_blank&quot;&gt;simplifying the voter affirmation process by treating past voting activity as intent to continue voting&lt;/a&gt;, if you voted last year, you have been automatically added to the 2025 voter roll. &lt;i&gt;Please note: If you removed or changed your email on psfmember.org, you may not automatically be added to this year&#39;s voter roll.&lt;/i&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Reminder that if you were formerly a Managing member, your membership has been updated to Contributing as of June 25th, 2025, per last year’s &lt;a href=&quot;https://github.com/psf/bylaws/compare/a35a6071de181adbb7a160d5d1447e7b0272359c...359cbc540f2f6bf00bc46b9dbe3e00a950612c27&quot; target=&quot;_blank&quot;&gt;Bylaw change that merged Managing and Contributing memberships&lt;/a&gt;.&amp;nbsp;&lt;/p&gt;&lt;p&gt;If you’d like to learn more or sign up as a PSF Member, check out our &lt;a href=&quot;https://www.python.org/psf/membership/&quot; target=&quot;_blank&quot;&gt;membership types&lt;/a&gt;. You can check your membership status on your &lt;a href=&quot;https://psfmember.org/user-information/&quot; target=&quot;_blank&quot;&gt;User Information page&lt;/a&gt; on psfmember.org (you will need to be logged in). If you have questions about your membership or the election please email psf-elections@pyfound.org&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/172170502486587461'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/172170502486587461'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/09/the-2025-psf-board-election-is-open.html' title='The 2025 PSF Board Election is Open!'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-2947981211744542716</id><published>2025-08-26T08:40:00.006-04:00</published><updated>2025-08-26T08:59:06.966-04:00</updated><title type='text'>pypistats.org is now operated by the Python Software Foundation</title><content type='html'>&lt;p&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;For a little over six years &lt;/span&gt;&lt;a href=&quot;http://pypistats.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;pypistats.org&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; has been maintained and operated by &lt;/span&gt;&lt;a href=&quot;https://flynn.gg/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Christopher Flynn&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; on a volunteer basis. After a recent &lt;/span&gt;&lt;a href=&quot;https://github.com/psf/pypistats.org/issues/82&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;extended outage&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; made clear the importance of this service to the Python community, and in coordination with Christopher, the Python Software Foundation (PSF) has adopted the project into our GitHub organization and migrated the service to run from our infrastructure.&lt;/span&gt;&lt;/p&gt;&lt;span id=&quot;docs-internal-guid-f71c98d5-7fff-3a37-1aa2-b96882c24e0a&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;So what has changed? As far as the day-to-day operations of the service goes the PSF Infrastructure Team will now make sure that &lt;/span&gt;&lt;a href=&quot;http://pypistats.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;pypistats.org&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;’s backing infrastructure, costs, and domain registration are all maintained. Otherwise, there is no material change to the service. The project remains &lt;/span&gt;&lt;a href=&quot;https://github.com/psf/pypistats.org&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;open source&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; and community maintained. We are appreciative that Christopher has stated his intention to stay on as maintainer of the project and we welcome the community to get involved.&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;We&#39;re also grateful to Christopher for his long-term volunteer contribution maintaining this service! As an organization, we are excited to have the opportunity to support pypistats.org and ensure it remains available to the community. Stories like this –under-resourced, but highly depended upon services– are not a new story for the open source community, and we are glad that this story had a positive outcome.&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;The PSF’s Infrastructure Team is excited to be in a place to adopt services like these into our burgeoning community infrastructure along with services like the &lt;/span&gt;&lt;a href=&quot;https://portal.pyladies.com/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;PyLadiesCon Portal&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; and &lt;/span&gt;&lt;a href=&quot;http://memory.python.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;memory.python.org&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;. This new community infrastructure, supported by &lt;/span&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/opensource/aws-promotional-credits-open-source-projects/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;AWS Open Source&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; via their credits program, is backed by the same tooling that delivers &lt;/span&gt;&lt;a href=&quot;http://pypi.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;pypi.org&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;, &lt;/span&gt;&lt;a href=&quot;http://python.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;python.org&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;, and &lt;/span&gt;&lt;a href=&quot;http://us.pycon.org/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;us.pycon.org&lt;/span&gt;&lt;/a&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-ligatures: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; along with many other PSF hosted services. We look forward to sharing more in the coming months– not only what we&#39;re up to but also how you can get involved!&lt;/span&gt;&lt;/span&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/2947981211744542716'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/2947981211744542716'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/08/pypistats-org-is-now-operated-by-the-psf.html' title='pypistats.org is now operated by the Python Software Foundation'/><author><name>Ee Durbin</name><uri>http://www.blogger.com/profile/13577459520968677064</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-6559048239731021091</id><published>2025-08-18T09:06:00.004-04:00</published><updated>2025-08-18T16:51:36.156-04:00</updated><title type='text'>The 2024 Python Developer Survey Results are here!</title><content type='html'>&lt;p&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;We are excited to share the &lt;/span&gt;&lt;span style=&quot;font-family: inherit; font-size: small;&quot;&gt;&lt;a href=&quot;https://lp.jetbrains.com/python-developers-survey-2024/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;results of the eighth official annual Python Developers Survey&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;. This survey is done yearly as a collaborative effort between the Python Software Foundation and&lt;/span&gt;&lt;a href=&quot;https://www.jetbrains.com/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;JetBrains&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;. Check out &lt;a href=&quot;https://fosstodon.org/@mkennedy&quot; target=&quot;_blank&quot;&gt;Michael Kennedy&lt;/a&gt;&#39;s &lt;a href=&quot;https://blog.jetbrains.com/pycharm/2025/08/the-state-of-python-2025/&quot; target=&quot;_blank&quot;&gt;The State of Python 2025&lt;/a&gt; blog post, on the &lt;a href=&quot;https://blog.jetbrains.com/pycharm/&quot; target=&quot;_blank&quot;&gt;JetBrains blog,&lt;/a&gt; which reflects his personal analysis and opinions on the data. Responses were collected October and November of 2024. More than 30,000 Python developers and enthusiasts from almost 200 countries and regions participated in the survey to reveal the current state of the language and the ecosystem around it.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt; text-align: center;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: small;&quot;&gt;&lt;a href=&quot;https://lp.jetbrains.com/python-developers-survey-2024/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 700; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Check out the survey results!&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;The survey aims to map the Python landscape and covers the following topics:&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;&quot;&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 12pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;General Python usage&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Purpose for using Python&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Python versions&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Frameworks and Libraries&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Cloud Platforms&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Data science&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Development tools&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Python packaging&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; list-style-type: disc; text-decoration: none; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 12pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Demographics&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style=&quot;background-color: transparent; color: black; font-family: inherit; font-size: small; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;We encourage you to check out the&lt;/span&gt;&lt;span style=&quot;font-family: inherit; font-size: small;&quot;&gt;&lt;a href=&quot;https://lp.jetbrains.com/python-developers-survey-2024/#methodology&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; methodology&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; and the&lt;/span&gt;&lt;a href=&quot;https://drive.google.com/drive/folders/1x2QZ0Pacs6vhGyA7_GIAMOAlpU_vHvG2?usp=share_link&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; raw data&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; for this year&#39;s Python Developers Survey, as well as those from past years (&lt;/span&gt;&lt;a href=&quot;https://lp.jetbrains.com/python-developers-survey-2023/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;2023&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;, &lt;/span&gt;&lt;a href=&quot;https://lp.jetbrains.com/python-developers-survey-2022/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;2022&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://lp.jetbrains.com/python-developers-survey-2021/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;2021&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://www.jetbrains.com/lp/python-developers-survey-2020&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;2020&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://www.jetbrains.com/lp/python-developers-survey-2019/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;2019&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://www.jetbrains.com/research/python-developers-survey-2018/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;2018&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;, and&lt;/span&gt;&lt;a href=&quot;https://www.jetbrains.com/research/python-developers-survey-2017/&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;2017&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;). We would love to hear about what you learn by digging into the numbers! Share your results and comments with us on social media by mentioning JetBrains (&lt;/span&gt;&lt;a href=&quot;https://www.linkedin.com/company/jetbrains&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;LinkedIn&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://twitter.com/jetbrains&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;X&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;) and the PSF (&lt;/span&gt;&lt;a href=&quot;https://fosstodon.org/@ThePSF&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Mastodon&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://www.linkedin.com/company/thepsf&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;LinkedIn&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;https://x.com/ThePSF&quot; style=&quot;text-decoration: none;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: #1155cc; font-style: normal; font-variant: normal; font-weight: 400; text-decoration-skip-ink: none; text-decoration: underline; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;X&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color: transparent; color: black; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;) using the #pythondevsurvey hashtag. Based on the feedback we received last year, we made adjustments to the 2024 survey- so we welcome suggestions and feedback that could help us improve again for next year!&lt;/span&gt;&lt;/span&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/6559048239731021091'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/6559048239731021091'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/08/the-2024-python-developer-survey.html' title='The 2024 Python Developer Survey Results are here!'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-9030977598664840792</id><published>2025-08-14T12:19:00.000-04:00</published><updated>2025-08-14T12:19:22.030-04:00</updated><title type='text'>Announcing the PSF Board Candidates for 2025!</title><content type='html'>&lt;p&gt;What an exciting list! &lt;b&gt;Please take a look at who is running for the PSF Board this year on the &lt;a href=&quot;https://www.python.org/nominations/elections/2025-python-software-foundation-board/nominees/&quot; target=&quot;_blank&quot;&gt;2025 Nominees page&lt;/a&gt;. &lt;/b&gt;This year there are 4 seats open on the PSF Board. You can see who is currently on the board on the &lt;a href=&quot;https://www.python.org/psf/board/&quot; target=&quot;_blank&quot;&gt;PSF Officers &amp;amp; Directors page&lt;/a&gt;. (Dawn Wages, Jannis Leidel, Kushal Das, and Simon Willison are at the end of their current terms.)&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Board Election Timeline:&lt;/h2&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Nominations open: Tuesday, July 29th, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Nomination cut-off: Tuesday, August 12th, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Announce candidates: Thursday, August 14th&lt;/li&gt;&lt;li&gt;Voter affirmation cut-off: Tuesday, August 26th, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Voting start date: Tuesday, September 2nd, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Voting end date: Tuesday, September 16th, 2:00 pm UTC&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Not sure what UTC is for you locally? Check this &lt;a href=&quot;https://savvytime.com/converter/utc&quot; target=&quot;_blank&quot;&gt;time converter&lt;/a&gt;!&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Reminder to affirm your intention to vote!&lt;/h2&gt;&lt;p&gt;&lt;b&gt;If you wish to vote in this year’s election, you must affirm your intention to vote no later than Tuesday, August 26th, 2:00 pm UTC, to participate in this year’s election.&lt;/b&gt; This year’s Board Election vote begins Tuesday, September 2nd, 2:00 pm UTC, and closes on Tuesday, September 16th, 2:00 pm UTC.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;Every PSF Voting Member (Supporting, Contributing, and Fellow) needs to affirm their membership to vote in this year’s election. You should have received an email from &quot;psf@psfmember.org &amp;lt;Python Software Foundation&amp;gt;&quot; with the subject &quot;[Action Required] Affirm your PSF Membership voting intention for 2025 PSF Board Election&quot; that contains information on how to affirm your voting status.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;Find more information, including step-by-step instructions on voting affirmation, in our&amp;nbsp; ‘&lt;a href=&quot;https://pyfound.blogspot.com/2025/07/affirm-your-psf-membership-voting-status.html&quot; target=&quot;_blank&quot;&gt;Affirm Your PSF Membership Voting Status&lt;/a&gt;” blog post. If you run into any issues, please email psf-elections@pyfound.org.&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Voting: what to expect&lt;/h2&gt;&lt;p&gt;If you are a voting member of the PSF that affirmed your intention to participate in this year’s election, you will receive an email from “OpaVote Voting Link &amp;lt;noreply@opavote.com&amp;gt;” with your ballot, the subject line will read “Python Software Foundation Board of Directors Election 2025” on September 2nd. If you don’t receive a ballot as expected, please first check your spam folder for a message from “noreply@opavote.com”. If you don’t see anything get in touch by emailing psf-elections@pyfound.org so we can look into your account and make sure we have the most up-to-date email for you.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;If you have questions about your membership status or the election, please email psf-elections@pyfound.org. You are welcome to &lt;a href=&quot;https://discuss.python.org/t/2025-psf-board-election/89521&quot; target=&quot;_blank&quot;&gt;join the discussion about the 2025 PSF Board election on the Python Discuss forum&lt;/a&gt;.&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/9030977598664840792'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/9030977598664840792'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/08/announcing-psf-board-candidates-for-2025.html' title='Announcing the PSF Board Candidates for 2025!'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-7382210234944840721</id><published>2025-08-08T08:47:00.000-04:00</published><updated>2025-08-08T08:47:56.326-04:00</updated><title type='text'>Announcing Python Software Foundation Fellow Members for Q2 2025! 🎉</title><content type='html'>&lt;p&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;The PSF is pleased to announce its second &lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;batch&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; of PSF Fellows for &lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;2025&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;! Let us welcome the new PSF Fellows for &lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Q2&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;! The following people continue to do amazing things for the Python community:&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt; text-align: center;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 12pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Hamdalah Adetunji&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt; text-align: center;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;https://www.linkedin.com/in/hamdalah-adetunji/&quot; target=&quot;_blank&quot;&gt;LinkedIn&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt; text-align: center;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 12pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Laís Carvalho&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt; text-align: center;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 12pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Mark Smith&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt; text-align: center;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;https://www.judy.co.uk/&quot; target=&quot;_blank&quot;&gt;Website&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/in/judy2k/&quot; target=&quot;_blank&quot;&gt;LinkedIn&lt;/a&gt;, &lt;a href=&quot;https://chaos.social/@judy2k&quot; target=&quot;_blank&quot;&gt;Mastodon&lt;/a&gt;, &lt;a href=&quot;https://bsky.app/profile/judy.co.uk&quot; target=&quot;_blank&quot;&gt;Bluesky&lt;/a&gt;, &lt;a href=&quot;https://github.com/judy2k/&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 12pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt; text-align: center;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 12pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Will McGugan&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt; text-align: center;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;https://willmcgugan.github.io/&quot; target=&quot;_blank&quot;&gt;Blog&lt;/a&gt;, &lt;a href=&quot;https://x.com/willmcgugan&quot; target=&quot;_blank&quot;&gt;X (Twitter)&lt;/a&gt;, &lt;a href=&quot;https://mastodon.social/@willmcgugan&quot; target=&quot;_blank&quot;&gt;Mastodon&lt;/a&gt;, &lt;a href=&quot;https://github.com/willmcgugan&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt; text-align: center;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Thank you for your continued contributions. We have added you to our &lt;a href=&quot;https://www.python.org/psf/fellows-roster/&quot; target=&quot;_blank&quot;&gt;Fellows Roster&lt;/a&gt;&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt; text-align: justify;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;The above members help support the Python ecosystem by being phenomenal leaders, sustaining the growth of the Python scientific community, maintaining virtual Python communities, maintaining Python libraries, creating educational material, organizing Python events and conferences, starting Python communities in local regions, and overall being great mentors in our community. Each of them continues to help make Python more accessible around the world. To learn more about the new Fellow members, check out their links above.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Let&#39;s continue recognizing Pythonistas all over the world for their impact on our community. The criteria for Fellow members is available on our &lt;a href=&quot;https://www.python.org/psf/fellows&quot; target=&quot;_blank&quot;&gt;PSF Fellow Membership page&lt;/a&gt;&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;. If you would like to nominate someone to be a PSF Fellow, please send a description of their Python accomplishments and their email address to psf-fellow at python.org. &lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Quarter 3&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt; nominations will be in review soon. We are accepting nominations for &lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Quarter 3 of 2025 through August 20th, 2025&lt;/span&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 11pt; margin-top: 11pt;&quot;&gt;&lt;span face=&quot;Arial, sans-serif&quot; style=&quot;background-color: white; color: black; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Are you a PSF Fellow and want to help the Work Group review nominations? Contact us at psf-fellow at python.org.&lt;/span&gt;&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/7382210234944840721'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/7382210234944840721'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/08/announcing-python-software-foundation.html' title='Announcing Python Software Foundation Fellow Members for Q2 2025! 🎉'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-4762866209719639347</id><published>2025-08-07T08:45:00.001-04:00</published><updated>2025-08-07T08:45:32.788-04:00</updated><title type='text'>Unmasking Phantom Dependencies with Software Bill-of-Materials as Ecosystem Neutral Metadata</title><content type='html'>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhskC2RgAuOT2yp-WV8VejTZSCZT00DOXxnQcqCuDemzgeNo-drh2E2O5EC0yAaz5ATAX84nkC1eUw1ULw2TAqAJ6oS6S4aRvwVB3v0D733VFVfHrCaIYz9-QcQ7s74kL9-Bhjps4LCz2GMbnGf4j2Oe5vWNrc0NFOEQnxiw-Gh5vB5HWtrPQ/s2000/Python-White-Paper-for-AO.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;2000&quot; data-original-width=&quot;1545&quot; height=&quot;320&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhskC2RgAuOT2yp-WV8VejTZSCZT00DOXxnQcqCuDemzgeNo-drh2E2O5EC0yAaz5ATAX84nkC1eUw1ULw2TAqAJ6oS6S4aRvwVB3v0D733VFVfHrCaIYz9-QcQ7s74kL9-Bhjps4LCz2GMbnGf4j2Oe5vWNrc0NFOEQnxiw-Gh5vB5HWtrPQ/s320/Python-White-Paper-for-AO.png&quot; width=&quot;247&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The Python Software Foundation Security Developer-in-Residence, Seth Larson,&amp;nbsp;&lt;a href=&quot;https://alpha-omega.dev/blog/unmasking-phantom-dependencies-with-software-bill-of-materials-as-ecosystem-neutral-metadata-white-paper-by-seth-larson-python-software-foundation/&quot;&gt;published a new white paper&lt;/a&gt;&amp;nbsp;with Alpha-Omega about the work to solve the &quot;Phantom Dependency&quot; problem. The white paper details the approach, challenges, and insights into the creation and acceptance of &lt;a href=&quot;https://peps.python.org/pep-0770/&quot;&gt;PEP 770&lt;/a&gt; and adopting Software Bill-of-Materials (SBOMs) to improve the measurability of Python packages.&amp;nbsp;&lt;/p&gt;&lt;p&gt;This work means that automated systems like vulnerability scanners, compliance, and policy tools will provide accurate results, even in complicated software composition and dependency graphs that are common for scientific computing, performance-critical workloads, and artificial intelligence.&lt;/p&gt;&lt;p&gt;Critical projects like &lt;a href=&quot;https://github.com/numpy/numpy/issues/29465&quot;&gt;numpy&lt;/a&gt;, &lt;a href=&quot;https://github.com/pyca/cryptography/issues/12764&quot;&gt;cryptography&lt;/a&gt;, and &lt;a href=&quot;https://github.com/pradyunsg/vendoring/issues/64#issuecomment-2817244181&quot;&gt;pip&lt;/a&gt; are already evaluating adopting &lt;a href=&quot;https://peps.python.org/pep-0770/&quot;&gt;PEP 770&lt;/a&gt; and providing cross-ecosystem dependency information through the use of SBOMs.&lt;/p&gt;&lt;p&gt;The &lt;a href=&quot;https://www.python.org/psf/developersinresidence/&quot;&gt;Security Developer-in-Residence position&lt;/a&gt; is sponsored by Alpha-Omega. If you&#39;d like to support improving Python at the ecosystem-scale contact sponsors@python.org to discuss sponsoring a Developer-in-Residence position.&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/4762866209719639347'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/4762866209719639347'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/08/unmasking-phantom-dependencies-with.html' title='Unmasking Phantom Dependencies with Software Bill-of-Materials as Ecosystem Neutral Metadata'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhskC2RgAuOT2yp-WV8VejTZSCZT00DOXxnQcqCuDemzgeNo-drh2E2O5EC0yAaz5ATAX84nkC1eUw1ULw2TAqAJ6oS6S4aRvwVB3v0D733VFVfHrCaIYz9-QcQ7s74kL9-Bhjps4LCz2GMbnGf4j2Oe5vWNrc0NFOEQnxiw-Gh5vB5HWtrPQ/s72-c/Python-White-Paper-for-AO.png" height="72" width="72"/></entry><entry><id>tag:blogger.com,1999:blog-8520.post-9185541418216599027</id><published>2025-08-05T06:13:00.002-04:00</published><updated>2025-08-06T08:31:45.606-04:00</updated><title type='text'>The PSF has paused our Grants Program</title><content type='html'>&lt;h3 style=&quot;text-align: left;&quot;&gt;&lt;b&gt;TL;DR:&lt;/b&gt;&lt;/h3&gt;&lt;p&gt;Effective August 1st, 2025, the PSF is temporarily pausing our Grants Program after reaching our 2025 grant budget cap earlier than expected. We know how important this program is to many in our community and making this decision was difficult. This is a necessary step to protect both the future of the program and the short- and long-term sustainability of the PSF. (If this moves you immediately to donate to the PSF, we welcome your contributions via &lt;a href=&quot;https://www.python.org/psf/donations/&quot; target=&quot;_blank&quot;&gt;our donations page&lt;/a&gt;).&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 style=&quot;text-align: left;&quot;&gt;The PSF Grants Program is paused&lt;/h3&gt;&lt;p&gt;As &lt;a href=&quot;https://pyfound.blogspot.com/2024/12/psf-grants-program-charter-updates-tldr.html&quot; target=&quot;_blank&quot;&gt;we shared in December 2024&lt;/a&gt; (specifically, &lt;a href=&quot;https://pyfound.blogspot.com/2024/12/12psf-grants-program-charter-updates-part-3.html&quot; target=&quot;_blank&quot;&gt;part 3&lt;/a&gt;), the PSF implemented changes to the Grants Program in March 2025 in an effort to ensure the sustainability of the program and the foundation. PSF Staff have been checking in quarterly on our award expenditure, and at the end of Q1, we were on track. When PSF Staff reviewed approved grant awards at the end of Q2, however, we had granted close to 80% of the 2025 grant budget. The grant applications received so far through July exceed the budget ceiling.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;What does this mean? &lt;b&gt;The PSF Board has voted to implement a pause, effective August 1st, 2025, on the PSF Grants Program.&lt;/b&gt; The PSF Board and Staff explored our options thoroughly before coming to this tough, and frankly painful, decision as we deeply understand how important the grants program is to the Python community.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;Everyone at the PSF is constantly amazed and impressed with the creativity, drive, and ingenuity of the Python community. Supporting the community’s success with our Grants Program is at the heart of our mission—and it brings so much joy to the PSF Board, our small but mighty team of staff, and the wonderful folks in our Work Groups. We are heartbroken to have to pause that work and we know this will be challenging and create more difficult decisions in turn for the many community groups that had planned to apply for the grants program.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;We will be distributing the small amount of remaining funds in the 2025 PSF Grants Program budget. To honor the time and energy spent on applications already submitted and in the spirit of equity, &lt;b&gt;any applications that were received before August 1st, 2025 will be granted a uniform percentage of the award amount for which they are eligible.&lt;/b&gt; If you have a grant application in the system, you will receive an email from us soon with more information. Please send any urgent inquiries to grants@python.org.&lt;br /&gt;&lt;br /&gt;The PSF aims to be as transparent as possible, and we want to have two-way conversations with the community about this change. We are holding an additional &lt;a href=&quot;https://pyfound.blogspot.com/2024/02/introducing-psf-grants-office-hours.html&quot; target=&quot;_blank&quot;&gt;PSF Grants Program Office Hour&lt;/a&gt; in August on the &lt;a href=&quot;https://discord.gg/7rthGF3BBe&quot; target=&quot;_blank&quot;&gt;PSF Discord&lt;/a&gt;. We welcome folks to join both or either session:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;August 13th, 8-9 pm UTC&lt;/li&gt;&lt;li&gt;August 19th, 1-2 pm UTC&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We also welcome your feedback, particularly how we can support you during this pause, via email to grants@python.org or on the &lt;a href=&quot;https://discuss.python.org/t/the-psf-has-paused-our-grants-program/101288&quot; target=&quot;_blank&quot;&gt;thread we’ve started on discuss.python.org&lt;/a&gt;.&lt;br /&gt;&lt;/p&gt;&lt;h3 style=&quot;text-align: left;&quot;&gt;How we got here&amp;nbsp;&lt;/h3&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Since announcing Grants program changes in December 2024, grant requests
 have grown about 40% over last year. It’s wonderful to see long-time 
events continue to grow. It’s been equally inspiring to see events being
 revived as we move further from 2020 and the start of the COVID 
pandemic, alongside brand-new initiatives from new and seasoned 
organizers. The PSF &lt;b&gt;loves&lt;/b&gt; seeing the growth, but the heart of the
 issue is that Python and its community continue to grow exponentially, 
while our funding has not kept pace, and in fact, has decreased.&lt;br /&gt;&lt;br /&gt;With Python being the &lt;a href=&quot;https://github.blog/news-insights/octoverse/octoverse-2024/&quot; target=&quot;_blank&quot;&gt;number one language on GitHub&lt;/a&gt; and &lt;a href=&quot;https://www.tiobe.com/tiobe-index/&quot; target=&quot;_blank&quot;&gt;rising steadily on the TIOBE index&lt;/a&gt;,
 it’s no surprise that our community continues to build and grow as 
well. You can see the TIOBE 
index shows what the growth of Python looks like over the years, and how
 much it’s grown in just the past year:&lt;br /&gt;&amp;nbsp;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEht7GZUmYfp6B2461-DVgvVlWa5wo2t7n-p5ZOhwU6JHpLM6Nvisw7UHelNjU2P408QYUPGT0amf_zxq9q6Z8b6n0DO7tK86RPkxUQbg7puBF1cWPV3cUMbLkQgESH27-IhezznZd3HAHx6twIQ8psDLoSNZZh0I9mcB0jriqZiadlo3QTaYQ/s2953/python_tiobe.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;1798&quot; data-original-width=&quot;2953&quot; height=&quot;244&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEht7GZUmYfp6B2461-DVgvVlWa5wo2t7n-p5ZOhwU6JHpLM6Nvisw7UHelNjU2P408QYUPGT0amf_zxq9q6Z8b6n0DO7tK86RPkxUQbg7puBF1cWPV3cUMbLkQgESH27-IhezznZd3HAHx6twIQ8psDLoSNZZh0I9mcB0jriqZiadlo3QTaYQ/w400-h244/python_tiobe.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;By contrast, the PSF’s available resources have decreased over the last three years and are projected to decrease again in 2025 due to increasing PyCon US and foundation costs. Much of the growth shown before 2022 in the chart below comes from grants we received that were restricted funds dedicated to specific staffing and other programs. The result is increasing global community activity against a decreasing pool of available funds.&amp;nbsp;&lt;/p&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiiH_a89NPF5ydqQMcvx1HaZmdKCIeGc-OX4wf23Fwirp9wqD5QSxY414NJUJW3mH9UUP6CzgkU65mrVOhDHamy5aZXJp8_b1QW0m5OkHNVknnJAQ1OXnWA0i7soEK36os6920emjp5xPGcSHlTIxKSYC09fl_LDjxXQWC8-_yzQ7vH41Gw3w/s782/psf_asset_trends.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;782&quot; data-original-width=&quot;568&quot; height=&quot;640&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiiH_a89NPF5ydqQMcvx1HaZmdKCIeGc-OX4wf23Fwirp9wqD5QSxY414NJUJW3mH9UUP6CzgkU65mrVOhDHamy5aZXJp8_b1QW0m5OkHNVknnJAQ1OXnWA0i7soEK36os6920emjp5xPGcSHlTIxKSYC09fl_LDjxXQWC8-_yzQ7vH41Gw3w/w464-h640/psf_asset_trends.png&quot; width=&quot;464&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;For example, 2023 year-end assets were $5.5M with total grants awarded 
at $677K. The following year, 2024 assets decreased slightly to $4.3M, 
but grants awarded jumped to $952K. You can see in the graph above how 
that negatively impacted our assets, a trend that is not sustainable 
even in the short term. Please check out the &lt;a href=&quot;https://www.python.org/psf/annual-report/2024/&quot; target=&quot;_blank&quot;&gt;PSF’s 2024 Annual Impact Report&lt;/a&gt; for more details of our finances and our work.&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjjaAwQv8CnVvh8SOOYS0mIJ-gnKY5qaaPFzdK8PjzpoN44ismaGAOQ9RBPhCsOwterbR7jrj9N0ptDKeUJ38mM6lYOnIVLzEtVkymcNC4CVwuURC-1PimQI9W9Y-3OWNGZeZJmJRoLK-JpamHENQQYVvbMPtYhOjjHhqxyAUUcmnQOCdU-oA/s828/psf_grant_trends.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;828&quot; data-original-width=&quot;589&quot; height=&quot;640&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjjaAwQv8CnVvh8SOOYS0mIJ-gnKY5qaaPFzdK8PjzpoN44ismaGAOQ9RBPhCsOwterbR7jrj9N0ptDKeUJ38mM6lYOnIVLzEtVkymcNC4CVwuURC-1PimQI9W9Y-3OWNGZeZJmJRoLK-JpamHENQQYVvbMPtYhOjjHhqxyAUUcmnQOCdU-oA/w456-h640/psf_grant_trends.png&quot; width=&quot;456&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;The
 &lt;a href=&quot;https://pyfound.blogspot.com/2024/12/12psf-grants-program-charter-updates-part-3.html&quot; target=&quot;_blank&quot;&gt;PSF Grants Program adjustments implemented earlier this year&lt;/a&gt; aimed to 
reduce total grant award spending while providing a more equitable 
approach, but the growth in new/revived grant applications outpaced the 
lowered caps and other limits. As we reviewed Q2 spending, it became 
clear that the unexpected influx of qualified grant proposals had 
already almost exhausted the total amount we had budgeted for the full 
year.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h3 style=&quot;text-align: left;&quot;&gt;We’re in this together&lt;/h3&gt;&lt;p&gt;The
 PSF is in a similar position to the many other organizations and NGOs 
(and all of our volunteer conference and meetup organizers!) trying to 
support the Python community and foundation while faced with inflation, 
lower sponsorship, economic pressure in the tech sector, and 
global/local uncertainty and conflict.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;Last year, &lt;a href=&quot;https://pycon.blogspot.com/2024/11/important-changes-ahead-commitment-to.html&quot; target=&quot;_blank&quot;&gt;the PyCon US blog explained&lt;/a&gt; that PyCon US 2024 generated a significant loss; losses 
from PyCon US are paid for by PSF general funds that are also the 
financial source for the PSF Grants programs. For many years, PyCon US 
created a surplus used to fund Grants, PSF staff, and other programs. 
Based on the current numbers for PyCon US 2025, the PSF will need to 
fund another loss. Many factors including the lower-than-budgeted 
attendance, higher location costs, and the current economic and 
political situation contributed to the loss despite incredible efforts 
by staff and volunteers to control costs.&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;h3 style=&quot;text-align: left;&quot;&gt;What’s the solution?&lt;/h3&gt;&lt;p&gt;In
 an ideal world, we wouldn’t need to pause the Grants Program and would 
instead be granting even MORE awards to our inspiring community. And 
while that’s not currently the case, we do think you can help us unpause
 the grants program and fund the PSF’s other work. &lt;b&gt;The PSF needs more 
support and resources from the corporations that are built on and making
 revenue from Python. As a community, let’s ask corporations to step up 
and sustain the health of the community and programming language they 
rely on.&lt;/b&gt; The AI sector, for example, relies heavily on Python and is 
mostly &lt;a href=&quot;https://georgiker.com/blog/is-ai-leaving-python-community-behind/&quot; target=&quot;_blank&quot;&gt;untapped for the PSF, PyCon US, and our entire community&lt;/a&gt;. If you 
have potential sponsorship connections (in AI or otherwise) we welcome 
you to send us leads or connect us via sponsors@python.org.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;The 
PSF is ever grateful for our sponsors, past and current, and we do 
everything we can to make their sponsorships beneficial and rewarding. 
PSF Staff also work hard to make those sponsorship dollars stretch as 
far as they can. Frankly, the PSF simply needs more sponsorship to 
continue to support the astonishing growth of Python and its community.&lt;br /&gt;&lt;br /&gt;The
 PSF is also incredibly grateful for our individual donors and PSF 
members. We truly couldn’t do this without you. If you’re inspired to 
help because of this post, we urge you to ask your employers to sponsor 
the PSF. Send them the &lt;a href=&quot;https://www.python.org/psf/sponsorship/&quot; target=&quot;_blank&quot;&gt;PSF’s sponsorship page&lt;/a&gt;! We know times are 
financially challenging for everyone, but if you’re feeling very 
inspired and in a position to donate, we welcome your contributions via 
the &lt;a href=&quot;https://psfmember.org/civicrm/contribute/transact/?reset=1&amp;amp;id=2&quot; target=&quot;_blank&quot;&gt;PSF’s donation page&lt;/a&gt;. You can also join us as a &lt;a href=&quot;https://psfmember.org/python-software-foundation-supporting-member-2/&quot; target=&quot;_blank&quot;&gt;PSF Supporting Member&lt;/a&gt;
 (&lt;a href=&quot;https://psfmember.org/civicrm/contribute/transact/?reset=1&amp;amp;id=39&quot; target=&quot;_blank&quot;&gt;a sliding scale is also available!&lt;/a&gt;), to invest in the future of Python
 and its community.&lt;/p&gt;&lt;h3 style=&quot;text-align: left;&quot;&gt;Some additional context&lt;/h3&gt;&lt;p&gt;As PSF Staff reviewed the Q2 numbers for the Grants Program, we found the following:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;&lt;b&gt;Revived events. &lt;/b&gt;10
 out of the 75 (or about 13%) grants applications we’ve received in 2025
 are for “revived” grant applications for events that weren’t run in 
2024 (including one that hasn’t been run since 2015, whoa!).&lt;/li&gt;&lt;li&gt;&lt;b&gt;Net new applications. &lt;/b&gt;19
 out of the 75 (or about 25%) grant applications we’ve received in 2025 
are for totally new events and initiatives. While we did expect some 
growth, this is tremendous!&lt;/li&gt;&lt;li&gt;&lt;b&gt;Earlier applications.&lt;/b&gt; We 
encouraged folks to apply earlier—and you did, thank you! We weren’t 
expecting this level of awarding by mid-year. We also expect that to 
continue, so we can now plan better for that in the future.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Higher $$ requests.&lt;/b&gt; Across all returning applications the amount being requested is about 13% higher than in years previous.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;While
 we expected more interest from the community in the PSF grants program,
 the amount of growth far exceeded our expectations.&amp;nbsp;&lt;/p&gt;&lt;h3 style=&quot;text-align: left;&quot;&gt;What’s next?&lt;/h3&gt;&lt;p&gt;The
 PSF is working on our strategy to balance support for the worldwide 
Python community and funding constraints, now and in the future. The 
unknown and rapidly growing number of new Python events and 
initiatives—combined with the ongoing needs of existing events and 
organizations that have historically relied on the PSF Grants Program—is
 challenging to manage sustainably on a rolling application basis.&lt;br /&gt;&lt;br /&gt;So, here’s our plan:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;First, the PSF Board will continue to refine the grant program’s guiding principles and how they translate into program policy.&amp;nbsp;&lt;/li&gt;&lt;li&gt;From
 there, PSF Staff will research, plan, and implement a quarterly review 
and awarding approach for the PSF Grants Program to provide an equitable
 and financially sustainable process.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Moving to a quarterly 
review process from the rolling approval process the Grants Program 
currently uses will be a big change! We will do our best to implement 
processes that work well for the community, the Grants Workgroup, and 
PSF Staff.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Even with our best efforts, we acknowledge that there will be
 learning opportunities around moving to a quarterly review and most 
likely a series of adjustments ahead of us to get things working 
smoothly. Your feedback as grant applicants and recipients will be 
extremely helpful as we take on this journey. During this process, we 
will determine on what timeline we can re-open the Grants Program. You 
can expect updates from us on the future of the PSF Grants Program in 
early 2026.&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/9185541418216599027'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/9185541418216599027'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/08/the-psf-has-paused-our-grants-program.html' title='The PSF has paused our Grants Program'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEht7GZUmYfp6B2461-DVgvVlWa5wo2t7n-p5ZOhwU6JHpLM6Nvisw7UHelNjU2P408QYUPGT0amf_zxq9q6Z8b6n0DO7tK86RPkxUQbg7puBF1cWPV3cUMbLkQgESH27-IhezznZd3HAHx6twIQ8psDLoSNZZh0I9mcB0jriqZiadlo3QTaYQ/s72-w400-h244-c/python_tiobe.png" height="72" width="72"/></entry><entry><id>tag:blogger.com,1999:blog-8520.post-2774174838473645285</id><published>2025-07-24T09:55:00.003-04:00</published><updated>2025-08-07T14:07:31.094-04:00</updated><title type='text'>PSF Board Election Nominations Opening July 29th</title><content type='html'>&lt;p&gt;This year’s PSF Board Election nomination period opens next week on Tuesday, July 29th, 2:00 pm UTC and closes on Tuesday, August 12th, 2:00 pm UTC. Who runs for the board? People who care about the Python community, who want to see it flourish and grow, and also have a few hours a month to attend regular meetings, serve on committees, participate in conversations, and promote the Python community.&amp;nbsp;&lt;/p&gt;&lt;p&gt;This year, there are 4 seats open on the PSF Board. Check out who is currently on the PSF Board on &lt;a href=&quot;https://www.python.org/psf/board/&quot; target=&quot;_blank&quot;&gt;our website&lt;/a&gt;. (Dawn Wages, Jannis Leidel, Kushal Das, and Simon Willison are at the end of their current terms.)&amp;nbsp;Check out the following resources to learn more about the PSF, as well as what being a part of the PSF Board entails:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ZLKj6FaQA4M&quot; target=&quot;_blank&quot;&gt;Life as Python Software Foundation Director&lt;/a&gt; video on YouTube&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://youtu.be/kD6cPBfR4A4?si=IizoM5mDPaUhQL_X&quot; target=&quot;_blank&quot;&gt;FAQs About the PSF Board&lt;/a&gt; video on YouTube&amp;nbsp;&lt;/li&gt;&lt;li&gt;Our past few Annual Impact Reports:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/annual-report/2024&quot; target=&quot;_blank&quot;&gt;2024 Annual Impact Report&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/annual-report/2023/&quot; target=&quot;_blank&quot;&gt;2023 Annual Impact Report&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/annual-report/2022/&quot; target=&quot;_blank&quot;&gt;2022 Annual Impact Report&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Board Election Timeline&lt;/h4&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Nominations open: Tuesday, July 29th, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Nomination cut-off: Tuesday, August 12th, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Announce candidates: Thursday, August 14th&lt;/li&gt;&lt;li&gt;Voter affirmation cut-off: Tuesday, August 26th, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Voting start date: Tuesday, September 2nd, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Voting end date: Tuesday, September 16th, 2:00 pm UTC&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Not sure what UTC is for you locally? Check this &lt;a href=&quot;https://savvytime.com/converter/utc&quot; target=&quot;_blank&quot;&gt;UTC time converter&lt;/a&gt;!&lt;br /&gt;&lt;/p&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Nomination details&lt;/h4&gt;&lt;p&gt;You can nominate yourself or someone else. We encourage you to reach out to people before you nominate them to ensure they are enthusiastic about the potential of joining the Board.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;b&gt;To submit a nomination for yourself or someone else, use the &lt;a href=&quot;https://www.python.org/nominations/2025-python-software-foundation-board/create/&quot; target=&quot;_blank&quot;&gt;2025 PSF Board Election Nomination Form&lt;/a&gt; on our website. The nomination form opens on Tuesday, July 29th, 2:00 pm UTC and closes on Tuesday, August 12th, 2:00 pm UTC.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;To support potential candidates and nominators, the 2025 PSF Board Election team has created a &lt;a href=&quot;https://drive.google.com/file/d/1tjtfJlKGeJ3o6eeDBj5--1NZZL2v51fb/view?usp=sharing&quot; target=&quot;_blank&quot;&gt;nomination resource&lt;/a&gt; (embedded below). It includes tips, formatting instructions, and guidance on what to include in a nomination. The goal is to help nominees understand what to expect and ensure that all candidates are provided the same clear and consistent standards.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;iframe allow=&quot;autoplay&quot; height=&quot;420&quot; src=&quot;https://drive.google.com/file/d/1tjtfJlKGeJ3o6eeDBj5--1NZZL2v51fb/preview&quot; width=&quot;500&quot;&gt;&lt;/iframe&gt;

&lt;/p&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Voting Reminder!&lt;/h4&gt;&lt;p&gt;Every PSF Voting Member (Supporting, Contributing, and Fellow) needs to affirm their membership to vote in this year’s election. You should have received an email from &quot;psf@psfmember.org &amp;lt;Python Software Foundation&amp;gt;&quot; with the subject &quot;[Action Required] Affirm your PSF Membership voting intention for 2025 PSF Board Election&quot; that contains information on how to affirm your voting status.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;You can see your membership record and status on your &lt;a href=&quot;https://psfmember.org/user-information&quot; target=&quot;_blank&quot;&gt;PSF Member User Information page&lt;/a&gt;. If you are a voting-eligible member and do not already have a login, please &lt;a href=&quot;https://psfmember.org/wp-login.php?action=register&quot; target=&quot;_blank&quot;&gt;create an account on psfmember.org&lt;/a&gt; first and then email psf-elections@python.org so we can link your membership to your account.&amp;nbsp;&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/2774174838473645285'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/2774174838473645285'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/07/psf-board-nominations-opening-july-29th.html' title='PSF Board Election Nominations Opening July 29th'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-8504103402886203913</id><published>2025-07-16T08:43:00.000-04:00</published><updated>2025-07-16T08:43:17.346-04:00</updated><title type='text'>Affirm Your PSF Membership Voting Status</title><content type='html'>&lt;p&gt;Every PSF voting-eligible Member (Supporting, Contributing, and Fellow) needs to affirm their membership to vote in this year’s election.&lt;/p&gt;&lt;p&gt;&lt;b&gt;If you wish to vote in this year’s PSF Board election, you must affirm your intention to vote no later than Tuesday, August 26th, 2:00 pm UTC. &lt;/b&gt;This year’s Board Election vote begins Tuesday, September 2nd, 2:00 pm UTC, and closes on Tuesday, September 16th, 2:00 pm UTC.&lt;/p&gt;&lt;p&gt;You should have received an email from &quot;psf@psfmember.org &amp;lt;Python Software Foundation&amp;gt;&quot; with the subject &quot;[Action Required] Affirm your PSF Membership voting intention for 2025 PSF Board Election&quot; that contains information on how to affirm your voting status. If you were expecting to receive the email but have not (make sure to check your spam!), please email psf-elections@pyfound.org, and we’ll assist you. &lt;i&gt;Please note: If you opted out of emails related to your membership, you did not receive this email.&amp;nbsp;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Need to check your membership status?&lt;/h4&gt;&lt;p&gt;Log on to psfmember.org and visit your &lt;a href=&quot;https://psfmember.org/user-information&quot; target=&quot;_blank&quot;&gt;PSF Member User Information page&lt;/a&gt;
 to see your membership record and status. If you are a voting-eligible 
member (active Supporting, Contributing, and Fellow members of the PSF) 
and do not already have a login, please &lt;a href=&quot;https://psfmember.org/wp-login.php?action=register&quot; target=&quot;_blank&quot;&gt;create an account on psfmember.org&lt;/a&gt;
 and then email psf-elections@pyfound.org so we can link your membership
 to your account. Please ensure you have an account linked to your 
membership so that we can have the most up-to-date contact information 
for you in the future.&amp;nbsp;&lt;/p&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;How to affirm your intention to vote&amp;nbsp;&lt;/h4&gt;&lt;p&gt;You can affirm your voting intention by following the steps in &lt;a href=&quot;https://www.youtube.com/watch?v=lWfyvPqAAJs&quot; target=&quot;_blank&quot;&gt;our video tutorial&lt;/a&gt;:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Log in to psfmember.org&lt;/li&gt;&lt;li&gt;Check your eligibility to vote (You must be a Contributing, Supporting, or Fellow member)&amp;nbsp;&lt;/li&gt;&lt;li&gt;Choose “&lt;a href=&quot;https://psfmember.org/civicrm/votingaffirmation/&quot; target=&quot;_blank&quot;&gt;Voting Affirmation&lt;/a&gt;” at the top right&lt;/li&gt;&lt;li&gt;Select your preferred intention for voting in 2025&lt;/li&gt;&lt;li&gt;Click the “Submit” button&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;PSF Bylaws&lt;/h4&gt;&lt;p&gt;Section 4.2 of the &lt;a href=&quot;https://www.python.org/psf/bylaws/&quot; target=&quot;_blank&quot;&gt;PSF Bylaws&lt;/a&gt; requires that “Members of any membership class with voting rights must affirm each year to the corporation in writing that such member intends to be a voting member for such year.”&lt;/p&gt;&lt;p&gt;Our motivation is to ensure that our elections can meet quorum as required by Section 3.9 of &lt;a href=&quot;https://www.python.org/psf/bylaws/&quot; target=&quot;_blank&quot;&gt;our bylaws&lt;/a&gt;. As our membership has grown, we have seen that an increasing number of Contributing and Fellow members with indefinite membership do not engage with our annual election, making quorum difficult to reach.&amp;nbsp;&lt;/p&gt;&lt;p&gt;An election that does not reach quorum is invalid. This would cause the whole voting process to be re-held, resulting in fewer voters and an undue amount of effort on the part of PSF Staff.&lt;/p&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Recent updates to membership and voting&lt;/h4&gt;&lt;p&gt;If you were formerly a Managing member, your membership has been updated to Contributing as of June 25th, 2025, per last year’s &lt;a href=&quot;https://github.com/psf/bylaws/compare/a35a6071de181adbb7a160d5d1447e7b0272359c...359cbc540f2f6bf00bc46b9dbe3e00a950612c27&quot; target=&quot;_blank&quot;&gt;Bylaw change that merged Managing and Contributing memberships&lt;/a&gt;.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;Per another recent Bylaw change that allows for &lt;a href=&quot;https://github.com/python/psf-bylaws/compare/a35a6071de181adbb7a160d5d1447e7b0272359c...6bac449&quot; target=&quot;_blank&quot;&gt;simplifying the voter affirmation process by treating past voting activity as intent to continue voting&lt;/a&gt;, if you voted last year, you will automatically be added to the 2025 voter roll. &lt;i&gt;Please note: If you removed or changed your email on psfmember.org, you may not automatically be added to this year&#39;s voter roll.&amp;nbsp;&lt;/i&gt;&lt;br /&gt;&lt;/p&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;What happens next?&lt;/h4&gt;&lt;p&gt;You’ll get an email from OpaVote with a ballot on or right before September 2nd, and then you can vote!&lt;/p&gt;&lt;p&gt;Check out our PSF Membership page to learn more. If you have questions about membership, nominations, or this year’s Board election, please email psf-elections@pyfound.org or join the &lt;a href=&quot;https://discord.gg/4Hm36PPgpG&quot; target=&quot;_blank&quot;&gt;PSF Discord&lt;/a&gt; for the &lt;a href=&quot;https://pyfound.blogspot.com/2025/07/thinking-about-running-for-psf-board.html&quot; target=&quot;_blank&quot;&gt;upcoming Board Office Hours&lt;/a&gt; on August 12th, 9 PM UTC. You are also welcome to &lt;a href=&quot;https://discuss.python.org/t/2025-psf-board-election/89521&quot; target=&quot;_blank&quot;&gt;join the discussion about the PSF Board election&lt;/a&gt; on our forum.&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/8504103402886203913'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/8504103402886203913'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/07/affirm-your-psf-membership-voting-status.html' title='Affirm Your PSF Membership Voting Status'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-3961009665560073836</id><published>2025-07-08T11:21:00.001-04:00</published><updated>2025-07-08T11:21:22.369-04:00</updated><title type='text'>Notice of Python Software Foundation Bylaws Change - Effective July 23, 2025</title><content type='html'>&lt;p&gt;This post serves as notice that the Board of the Python Software Foundation has resolved to amend the Bylaws, effective July 23, 2025, to remove a condition of the Bylaws that would prevent the Foundation from complying with data privacy laws including those in effect in the European Union, the United Kingdom, and the State of California.&lt;br /&gt;&lt;br /&gt;Section 3.8 of the Bylaws grants Voting Members the right to request the list of Voting Members’ names and email addresses. As written, this data must be given unconditionally, which would violate the previously mentioned laws. The amendment we are making grants the Foundation the ability to place conditions upon the use of that list in a way that allows us to comply with data privacy laws.&lt;br /&gt;&lt;br /&gt;The full change can be found at &lt;a href=&quot;https://github.com/psf/bylaws/pull/7/files&quot;&gt;https://github.com/psf/bylaws/pull/7/files&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The Board determined that this change was time-sensitive and chose to amend the Bylaws without prior consultation with Voting Members. We greatly value the input of our membership in the governance of the Foundation. Therefore, we have opted to make only the most minimal change that will enable the Foundation to comply with data privacy laws and protect our members, while preserving the spirit of the text that the membership agreed to when adopting these Bylaws.&lt;br /&gt;&lt;br /&gt;A future Bylaws update will be offered to the membership at a future election. As we are less than 3 months from the 2025 Board election, we are targeting the 2026 Board election to allow the membership to discuss further amendments for the membership to vote upon.&lt;br /&gt;&lt;br /&gt;Thanks,&lt;br /&gt;&lt;br /&gt;The Python Software Foundation Board&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/3961009665560073836'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/3961009665560073836'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/07/notice-of-python-software-foundation.html' title='Notice of Python Software Foundation Bylaws Change - Effective July 23, 2025'/><author><name>Christopher Neugebauer</name><uri>http://www.blogger.com/profile/05686111958689401667</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-8098998738948693227</id><published>2025-07-02T08:08:00.001-04:00</published><updated>2025-07-02T08:12:22.931-04:00</updated><title type='text'>Thinking about running for the PSF Board? Let’s talk!</title><content type='html'>&lt;p&gt;PSF Board elections are a chance for the community to choose representatives to help the PSF create a vision for and build the future of the Python community. This year, there are 4 seats open on the PSF Board. Check out who is currently on the PSF Board on &lt;a href=&quot;https://www.python.org/psf/board/&quot; target=&quot;_blank&quot;&gt;our website&lt;/a&gt;. (Dawn Wages, Jannis Leidel, Kushal Das, and Simon Willison are at the end of their current terms.)&lt;/p&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Office Hours Information&lt;/h4&gt;&lt;p&gt;This year, the PSF Board is dedicating a few of their &lt;a href=&quot;https://pyfound.blogspot.com/2024/08/ask-questions-or-tell-us-what-you-think.html&quot; target=&quot;_blank&quot;&gt;regular Office Hour sessions&lt;/a&gt; on the &lt;a href=&quot;https://discord.gg/4Hm36PPgpG&quot; target=&quot;_blank&quot;&gt;PSF Discord&lt;/a&gt; to the topic of the election. This is your chance to connect with current board members to ask questions and learn more about what being a part of the Board entails.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;The two upcoming Office Hour sessions will be dedicated to the topic of the election:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://discord.gg/XZRseGBpwb?event=1278055289689473045&quot; target=&quot;_blank&quot;&gt;Tuesday, July 8th, 1 PM UTC&lt;/a&gt;&amp;nbsp;- Nominations&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://discord.gg/XZRseGBpwb?event=1278055444526403675&quot; target=&quot;_blank&quot;&gt;Tuesday, August 12th, 9 PM UTC&lt;/a&gt;&amp;nbsp;- Membership &amp;amp; general election questions&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We welcome you to join the &lt;a href=&quot;https://discord.gg/4Hm36PPgpG&quot; target=&quot;_blank&quot;&gt;PSF Discord&lt;/a&gt; to participate in Office Hours. The server is moderated by PSF Staff and locked between office hours sessions. If you’re new to Discord, check out some &lt;a href=&quot;https://support.discord.com/hc/en-us/sections/360008206871-Discord-Basics&quot; target=&quot;_blank&quot;&gt;Discord Basics&lt;/a&gt; to help you get started.&amp;nbsp;&lt;/p&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Who runs for the Board?&lt;/h4&gt;&lt;p&gt;Who runs for the board? People who care about the Python community, who want to see it flourish and grow, and also have a few hours a month to attend regular meetings, serve on committees, participate in conversations, and promote the Python community. Want to learn more about being on the PSF Board? Check out the following resources to learn more about the PSF, as well as what being a part of the PSF Board entails:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ZLKj6FaQA4M&quot; target=&quot;_blank&quot;&gt;Life as Python Software Foundation Director&lt;/a&gt; video on YouTube&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://youtu.be/kD6cPBfR4A4?si=IizoM5mDPaUhQL_X&quot; target=&quot;_blank&quot;&gt;FAQs About the PSF Board video&lt;/a&gt; on YouTube&amp;nbsp;&lt;/li&gt;&lt;li&gt;Our past few Annual Impact Reports:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/annual-report/2024&quot; target=&quot;_blank&quot;&gt;2024 Annual Impact Report&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/annual-report/2023/&quot; target=&quot;_blank&quot;&gt;2023 Annual Impact Report&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/annual-report/2022/&quot; target=&quot;_blank&quot;&gt;2022 Annual Impact Report&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h4 style=&quot;text-align: left;&quot;&gt;Nomination info&lt;/h4&gt;&lt;p&gt;You can nominate yourself or someone else. We encourage you to reach out to people before you nominate them to ensure they are enthusiastic about the potential of joining the Board. &lt;b&gt;Nominations open on Tuesday, July 29th, 2:00 pm UTC&lt;/b&gt;, so you have a few weeks to research the role and craft a nomination statement. &lt;b&gt;The nomination period ends on Tuesday, August 12th, 2:00 pm UTC&lt;/b&gt;. There will be a &#39;call for nominations&#39; blog post with more information and resources about nominations coming soon.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/8098998738948693227'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/8098998738948693227'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/07/thinking-about-running-for-psf-board.html' title='Thinking about running for the PSF Board? Let’s talk!'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-5462201134581235528</id><published>2025-06-17T08:25:00.001-04:00</published><updated>2025-06-17T08:25:44.455-04:00</updated><title type='text'>The PSF&#39;s 2024 Annual Impact Report is here!</title><content type='html'>&lt;p&gt;2024 was another remarkable year of growth for the Python Software Foundation! Python became the most popular language on GitHub, and worldwide community engagement was at an all-time high. We expanded our impact by welcoming our inaugural PyPI Support Specialist, Maria Ashna, the revival of the User Success and Education and Outreach Workgroups, and continued investment in grants, infrastructure, and accessibility. We’ve captured some of the key numbers, details, and information in our &lt;a href=&quot;https://www.python.org/psf/annual-report/2024&quot; target=&quot;_blank&quot;&gt;latest Annual Impact Report&lt;/a&gt;.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;Some highlights of what you’ll find in the report include:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;A letter from our Executive Director, Deb Nicholson&lt;/li&gt;&lt;li&gt;Notes from our &lt;a href=&quot;https://us.pycon.org/2025/&quot; target=&quot;_blank&quot;&gt;PyCon US 2025&lt;/a&gt; Chair and Co-Chair, Elaine Wong and Jon Bonafato, and PSF Board of Directors Chair, Dawn Wages&lt;/li&gt;&lt;li&gt;Updates on the achievements and activities of our &lt;a href=&quot;https://www.python.org/psf/developersinresidence/&quot; target=&quot;_blank&quot;&gt;Developers-in-Residence&lt;/a&gt;: Łukasz Langa, Petr Vicktorin, Serhiy Storchaka, and Seth Larson&lt;/li&gt;&lt;li&gt;An overview of &lt;a href=&quot;https://pypi.org/&quot; target=&quot;_blank&quot;&gt;PyPI&lt;/a&gt; in 2024, including:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Impressive and ever-growing stats&lt;/li&gt;&lt;li&gt;An overview of the work and accomplishments of our PyPI Safety &amp;amp; Security Engineer, Mike Fiedler&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;A celebration and summary of &lt;a href=&quot;https://us.pycon.org/2024/&quot; target=&quot;_blank&quot;&gt;PyCon US 2024&lt;/a&gt;&lt;/li&gt;&lt;li&gt;A highlight of our &lt;a href=&quot;https://www.python.org/psf/fiscal-sponsorees/&quot; target=&quot;_blank&quot;&gt;20 amazing Fiscal Sponsorees&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/sponsors/&quot; target=&quot;_blank&quot;&gt;Sponsors&lt;/a&gt; who generously supported our work and the Python ecosystem&lt;/li&gt;&lt;li&gt;An overview of PSF Financials, including a consolidated financial statement and grants data&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We hope you check out &lt;a href=&quot;https://www.python.org/psf/annual-report/2024&quot; target=&quot;_blank&quot;&gt;the report&lt;/a&gt;, share it with your Python friends, and let us know what you think! Find us on social media (&lt;a href=&quot;https://fosstodon.org/@ThePSF&quot; target=&quot;_blank&quot;&gt;Mastodon&lt;/a&gt;, &lt;a href=&quot;https://bsky.app/profile/python.org&quot; target=&quot;_blank&quot;&gt;Bluesky&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ThePSF&quot; target=&quot;_blank&quot;&gt;X&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/company/thepsf/&quot; target=&quot;_blank&quot;&gt;LinkedIn&lt;/a&gt;), or share your thoughts on the Python Discuss thread.&amp;nbsp;&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/5462201134581235528'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/5462201134581235528'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/the-psfs-2024-annual-impact-report-is.html' title='The PSF&#39;s 2024 Annual Impact Report is here!'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-5987951854922087689</id><published>2025-06-12T14:33:00.005-04:00</published><updated>2025-06-18T11:19:04.216-04:00</updated><title type='text'>2025 PSF Board Election Schedule</title><content type='html'>&lt;p&gt;The PSF Board elections are a chance for the community to choose representatives to help the Python Software Foundation create a vision for and build the future of the Python community. This year, there are 4 seats open on the PSF Board. Check out who is currently on the board on &lt;a href=&quot;https://www.python.org/psf/board/&quot; target=&quot;_blank&quot;&gt;the PSF&#39;s website&lt;/a&gt;. (Dawn Wages, Jannis Leidel, Kushal Das, and Simon Willison are at the end of their current terms.) As &lt;a href=&quot;https://pyfound.blogspot.com/2025/04/2025-psf-board-election-schedule-change.html&quot; target=&quot;_blank&quot;&gt;we previously shared&lt;/a&gt;, the Board election will take place a little later this year to better serve our community and ease pressure on PSF Staff.&amp;nbsp;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Board Election Timeline&lt;/h2&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Nominations open: Tuesday, July 29th, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Nomination cut-off: Tuesday, August 12th, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Announce candidates: Thursday, August 14th&lt;/li&gt;&lt;li&gt;Voter affirmation cut-off: Tuesday, August 26th, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Voting start date: Tuesday, September 2nd, 2:00 pm UTC&lt;/li&gt;&lt;li&gt;Voting end date: Tuesday, September 16th, 2:00 pm UTC&lt;/li&gt;&lt;/ul&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Voting&amp;nbsp;&lt;/h2&gt;&lt;p&gt;You must be a Contributing, Supporting, or Fellow member by August 26th and affirm your intention to vote to participate in this election. If you are currently a Managing member, you will receive a communication soon notifying you that your membership type will be changed to Contributing per last year’s &lt;a href=&quot;https://github.com/psf/bylaws/compare/a35a6071de181adbb7a160d5d1447e7b0272359c...359cbc540f2f6bf00bc46b9dbe3e00a950612c27&quot; target=&quot;_blank&quot;&gt;Bylaw change that merged Managing and Contributing memberships&lt;/a&gt;.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;Check out the &lt;a href=&quot;https://www.python.org/psf/membership/&quot; target=&quot;_blank&quot;&gt;PSF membership page&lt;/a&gt; to learn more about membership classes and benefits. You can affirm your voting intention by following the steps in &lt;a href=&quot;https://www.youtube.com/watch?v=lWfyvPqAAJs&quot; target=&quot;_blank&quot;&gt;our video tutorial&lt;/a&gt;:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Log in to psfmember.org&lt;/li&gt;&lt;li&gt;Check your eligibility to vote (You must be a Contributing, Supporting, or Fellow member)&amp;nbsp;&lt;/li&gt;&lt;li&gt;Choose “Voting Affirmation” at the top right&lt;/li&gt;&lt;li&gt;Select your preferred intention for voting in 2025&lt;/li&gt;&lt;li&gt;Click the “Submit” button&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Per another recent &lt;a href=&quot;https://github.com/python/psf-bylaws/compare/a35a6071de181adbb7a160d5d1447e7b0272359c...6bac449&quot; target=&quot;_blank&quot;&gt;Bylaw change that allows for simplifying the voter affirmation process by treating past voting activity as intent to continue voting&lt;/a&gt;, if you cast your ballot last year, you will automatically be added to the 2025 voter roll. Please note that if you removed or changed your email on psfmember.org, you may not automatically be added to this year&#39;s voter roll.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;If you have questions about membership, please email psf-elections@pyfound.org.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Run for the Board&lt;/h2&gt;&lt;p&gt;Who runs for the board? People who care about the Python community, who want to see it flourish and grow, and also have a few hours a month to attend regular meetings, serve on committees, participate in conversations, and promote the Python community. Want to learn more about being on the PSF Board? Check out the following resources to learn more about the PSF, as well as what being a part of the PSF Board entails:&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ZLKj6FaQA4M&quot; target=&quot;_blank&quot;&gt;Life as Python Software Foundation Director video&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://youtu.be/kD6cPBfR4A4?si=IizoM5mDPaUhQL_X&quot; target=&quot;_blank&quot;&gt;FAQs About the PSF Board video&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Our past few Annual Impact Reports:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/annual-report/2024&quot; target=&quot;_blank&quot;&gt;2024 Annual Impact Report&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/annual-report/2023/&quot; target=&quot;_blank&quot;&gt;2023 Annual Impact Report&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.python.org/psf/annual-report/2022/&quot; target=&quot;_blank&quot;&gt;2022 Annual Impact Report&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;You can nominate yourself or someone else. We would encourage you to reach out to folks before you nominate them to make sure they are enthusiastic about the potential of joining the Board. Nominations open on Tuesday, July 29th, 2:00 pm UTC, so you have time to talk with potential nominees, research the role, and craft a nomination statement for yourself or others. Take a look at &lt;a href=&quot;https://www.python.org/nominations/elections/2024-python-software-foundation-board/nominees/&quot; target=&quot;_blank&quot;&gt;last year’s nomination statements&lt;/a&gt; for reference.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Learn more and join the discussion&lt;/h2&gt;&lt;p&gt;You are welcome to join the discussion about the PSF Board election on the &lt;a href=&quot;https://discuss.python.org/t/2025-psf-board-election/89521&quot; target=&quot;_blank&quot;&gt;Discuss forum&lt;/a&gt;. This year, we’ll also be hosting &lt;a href=&quot;https://pyfound.blogspot.com/2024/08/ask-questions-or-tell-us-what-you-think.html&quot; target=&quot;_blank&quot;&gt;PSF Board Office Hours&lt;/a&gt; on the &lt;a href=&quot;https://discord.gg/4Hm36PPgpG&quot; target=&quot;_blank&quot;&gt;PSF Discord&lt;/a&gt; in July and August to answer questions about running for and serving on the board. Subscribe to the &lt;a href=&quot;https://pyfound.blogspot.com/&quot; target=&quot;_blank&quot;&gt;PSF blog&lt;/a&gt; or, if you&#39;re a member, join the psf-member-announce mailing list to receive updates leading up to the election.&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/5987951854922087689'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/5987951854922087689'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/2025-psf-board-election-schedule.html' title='2025 PSF Board Election Schedule'/><author><name>Marie Nordin</name><uri>http://www.blogger.com/profile/15138793242213676112</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-6483838701333682303</id><published>2025-06-12T09:34:00.001-04:00</published><updated>2025-06-12T10:46:25.529-04:00</updated><title type='text'>The Python Language Summit 2025</title><content type='html'>&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px; white-space-collapse: preserve;&quot;&gt;The Python Language Summit 2025 occurred on May 14th in Pittsburgh, Pennsylvania. Core developers and special guests from around the world gathered in one room for an entire day of presentations and discussions about the future of the Python programming language.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px; white-space-collapse: preserve;&quot;&gt;The summit was organized by Emily Morehouse and Łukasz Langa, and blog posts were written by Seth Larson. Thanks to Marie Nordin, the Community Communications Manager at the Python Software Foundation, for reviewing and editing the blog posts.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px; white-space-collapse: preserve;&quot;&gt;This year’s set of presentations was heavily themed towards the new &quot;free-threading&quot; work, featuring multiple discussions about contention, concurrency, and governance.&lt;/span&gt;&lt;/p&gt;&lt;span id=&quot;docs-internal-guid-cdb22262-7fff-2cbb-02a9-0b3e881c8dac&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;/p&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhhROkRpucKp5Xrk_2Rf8tX442xMo0fA4dV3Yq5kZvm5la6nZe7tb6Pjn60r0B4_Sk3sZyOK_g78E5-zmV2xRPqTkP6RxEqFKk0AD_X7ZJXC_a3vv91AQQtPEZcJ1hns6k_9lLCsuPDyTrj4gkdtPto1LZBhgm5BL-39xRyPivY-fBaKSkQkw/s6507/PyCon_US_2025_Language_Summit_Alt.jpeg&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;4338&quot; data-original-width=&quot;6507&quot; height=&quot;213&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhhROkRpucKp5Xrk_2Rf8tX442xMo0fA4dV3Yq5kZvm5la6nZe7tb6Pjn60r0B4_Sk3sZyOK_g78E5-zmV2xRPqTkP6RxEqFKk0AD_X7ZJXC_a3vv91AQQtPEZcJ1hns6k_9lLCsuPDyTrj4gkdtPto1LZBhgm5BL-39xRyPivY-fBaKSkQkw/s320/PyCon_US_2025_Language_Summit_Alt.jpeg&quot; width=&quot;320&quot; /&gt;&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Attendees of the Python Language Summit 2025&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; vertical-align: baseline; white-space-collapse: preserve;&quot;&gt;Please enjoy the blog posts about each topic below:&lt;/span&gt;&lt;/p&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;div&gt;&lt;span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;ul style=&quot;margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;&quot;&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-how-can-we-make-breaking-changes-less-painful.html&quot;&gt;How can we make breaking changes less painful?&lt;/a&gt;: talk by Itamar Oren&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul style=&quot;margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;&quot;&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-uncontentious-talk-about-contention.html&quot;&gt;An Uncontentious Talk about Contention&lt;/a&gt;: talk by Mark Shannon&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-state-of-free-threaded-python.html&quot;&gt;State of Free-Threaded Python&lt;/a&gt;: talk by Matt Page&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-fearless-concurrency.html&quot;&gt;Fearless Concurrency&lt;/a&gt;: talk by Matthew Parkinson, Tobias Wrigstad, and Fridtjof Stoldt&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-challenges-of-the-steering-council.html&quot;&gt;Challenges of the Steering Council&lt;/a&gt;: talk by Eric Snow&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-docs-editorial-board.html&quot;&gt;Updates from the Python Docs Editorial Board&lt;/a&gt;: talk by Mariatta &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-packaging-governance-process.html&quot;&gt;PEP 772 - Packaging Governance Process&lt;/a&gt;: talk by Barry Warsaw and Pradyun Gedam&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-python-on-mobile.html&quot;&gt;Python on Mobile - Next Steps&lt;/a&gt;: talk by Russell Keith-Magee&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-what-do-core-developers-want-from-rust.html&quot;&gt;What do Python core developers want from Rust?&lt;/a&gt;: talk by David Hewitt&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-upstreaming-the-pyodide-js-ffi.html&quot;&gt;Upstreaming the Pyodide JS FFI&lt;/a&gt;: talk by Hood Chatham&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=&quot;1&quot; dir=&quot;ltr&quot; style=&quot;font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; role=&quot;presentation&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: inherit; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; text-wrap-mode: wrap; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-lightning-talks.html&quot;&gt;Lightning Talks&lt;/a&gt;: talks by Martin DeMello, Mark Shannon, Noah Kim, Gregory Smith, Guido van Rossum, Pablo Galindo Salgado, and Lysandros Nikolaou&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;span face=&quot;Arial, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; white-space-collapse: preserve;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span face=&quot;Arial, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; white-space-collapse: preserve;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/6483838701333682303'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/6483838701333682303'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025.html' title='The Python Language Summit 2025'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhhROkRpucKp5Xrk_2Rf8tX442xMo0fA4dV3Yq5kZvm5la6nZe7tb6Pjn60r0B4_Sk3sZyOK_g78E5-zmV2xRPqTkP6RxEqFKk0AD_X7ZJXC_a3vv91AQQtPEZcJ1hns6k_9lLCsuPDyTrj4gkdtPto1LZBhgm5BL-39xRyPivY-fBaKSkQkw/s72-c/PyCon_US_2025_Language_Summit_Alt.jpeg" height="72" width="72"/></entry><entry><id>tag:blogger.com,1999:blog-8520.post-8868363583020503629</id><published>2025-06-12T09:32:00.008-04:00</published><updated>2025-06-12T11:12:07.595-04:00</updated><title type='text'>The Python Language Summit 2025: How can we make Breaking Changes Less Painful?</title><content type='html'>&lt;p&gt;The first talk of the Python Language Summit was delivered by Itamar Oren. Itamar has plenty of experience at Meta deploying massive amounts of Python code to production. Itamar’s presentation focused on how Python core developers might make upgrades to Python versions smoother for users in the face of breaking changes to the language and standard library. Itamar shared that “not all breaking changes are equal” and suggested adopting a taxonomy of breaking changes and how much and when they would affect users.&lt;/p&gt;&lt;p&gt;Itamar made it clear that he was “not asking [Python core developers] to do fewer breaking changes”, but instead hoped to make breaking changes easier for users to work through during a Python version upgrade.&lt;/p&gt;&lt;p&gt;Users upgrading Python versions need to go through a flowchart for each breaking change:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;Awareness of breaking changes&lt;/li&gt;&lt;li&gt;Finding the affected code&lt;/li&gt;&lt;li&gt;Fixing the affected code&lt;/li&gt;&lt;li&gt;Verifying fixes are correct&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Starting with “Fixing”, Itamar noted that “fixing the code tends to be the easiest step, but easy at scale is still hard” and that fixing was easiest when you know where to do the fix. This was especially straightforward if the fix only used builtins or the standard library, noting that needing to take on new dependencies like packages on PyPI for removed modules was much more difficult.&lt;/p&gt;&lt;p&gt;“Migration guides are great, let’s do more of them”, Itamar said while thanking Barry for the imp module migration guide. Itamar called out a few suggestions for would-be migration guide authors, such as making the guide comprehensive for all removed APIs and providing an indication “whether an API is a drop-in equivalent or requires further changes”. Itamar gave the example of imp.load_module() versus importlib.import_module(), which was recommended in the migration guide but had different function signatures and couldn’t accomplish the same tasks.&lt;/p&gt;&lt;p&gt;Itamar noted the difficulty in finding the documentation for deprecated and removed modules because, after a module is removed, its corresponding documentation on &lt;a href=&quot;http://docs.python.org&quot;&gt;docs.python.org&lt;/a&gt; is also removed for that version. Carol Willing noted that the documentation team has been working on fixing the documentation removal issue for the “past 3 months”.&lt;/p&gt;&lt;p&gt;Finding code that’s affected by breaking changes was the toughest challenge, as breaking changes all had different “findability” metrics ranging between “easy&quot; and &quot;virtually impossible”. The easiest breaking changes to find in massive codebases are statically discoverable, such as being able to parse Python source code using an Abstract Syntax Tree (AST) or regular expressions to quickly hone in on problematic code.&lt;/p&gt;&lt;p&gt;The next easiest class of breaking changes to find are those that manifest at “build time”, which, since Python is an interpreted language, build time is equivalent to when PYC files are compiled. Itamar noted that “real code has good coverage for these issues”, like errors that happen on import time. The example noted for this type of breaking change was the accidental dataclasses mutables change in 3.12.&lt;/p&gt;&lt;p&gt;The most difficult class of breaking changes manifest during runtime, such as failures that depend on type or value information for parameters. These breaking changes are most likely to cause production outages because whether you find the affected code or not is dependent on type checking and test failures, which can be “highly variable”.&lt;/p&gt;&lt;p&gt;Itamar finished the presentation with a handful of suggestions for core developers on how to improve the backwards-incompatible change process. These suggestions included creating a taxonomy for breaking changes in terms of discoverability and fixability, and suggesting tools for automatically fixing backwards incompatible changes during upgrades. Ruff was suggested as a potential tool for applying these automatic fixes.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Discussion&lt;/h2&gt;&lt;p&gt;Eric Smith spoke about the dataclasses mutability change, noting that he and Raymond Hettinger had made the change and “didn’t recall getting any feedback until we released it, at which point we couldn’t fix it”. Eric wasn’t sure what he could have done for that specific case, but “thought that we are getting better at people using new versions during the beta period”. Eric also lamented that the change “would have been backed out had [he] known about the breakage”. Itamar suggested that core developers might collaborate with companies with large codebases for testing changes when core developers aren’t sure about compatibility.&lt;/p&gt;&lt;p&gt;Alex Waygood spoke about maintaining the typing-extensions project, which suffered from backwards compatibility issues, noting that “not many projects pin typing-extensions”, meaning the subtle changes end up breaking in surprising ways. Notably, typing-extensions broke Pydantic in the past, which caused problems for typing-extensions maintainers. Alex offered that “running the test suites of several large packages that depend on [typing-extensions] has helped catch many changes that weren’t expected to be backwards incompatible”, adding that “it would be great if there were an easier way to run the test suite of other projects”.&lt;/p&gt;&lt;p&gt;Carol Willing suggested working on making Python pre-releases easier to run using Continuous Integration (CI) and that this approach had been “successful” for scientific Python projects for finding and fixing breaking changes ahead of when the changes start affecting users. Itamar concurred, saying his “dream is to run global testing against [Python main branch] on a daily basis” but that this dream was “currently impossible” due to third-party dependencies. Pradyun Gedam noted that the idea of “ecosystem tests” had been discussed on the Packaging Discourse.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/8868363583020503629'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/8868363583020503629'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025-how-can-we-make-breaking-changes-less-painful.html' title='The Python Language Summit 2025: How can we make Breaking Changes Less Painful?'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-3678678226284925931</id><published>2025-06-12T09:32:00.005-04:00</published><updated>2025-06-12T09:32:40.719-04:00</updated><title type='text'>The Python Language Summit 2025: An Uncontentious Talk about Contention</title><content type='html'>&lt;p&gt;&amp;nbsp;An Uncontentious Talk about Contention&lt;/p&gt;&lt;p&gt;Mark Shannon presented to the Language Summit a talk about contention, noting that the talk had been upgraded from a lightning talk, so warned the audience that there was “now some room for contentiousness”.&lt;/p&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiTwnNnJK6mxhd4hZmEzX2eveMxOgW8ne7F2fNuNjyZKqv1HdGnRYFiZ2o1UOt3S3jn1_rcIht76PHJSHdQzSz2xhtlpMlhcZz0Lpng0b9_nj4Fmk485F-gxLEFZGpP8pJbafGBQwJy2_kURXVeH8P1ffcs4Yve8DBAQNLLsR6O3zWjPf2aPQ/s919/Screenshot%20from%202025-06-05%2014-37-20.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img alt=&quot;Counter program showing 10 threads concurrently incrementing a value 100,000 times, hoping for a total value of 1 million.&quot; border=&quot;0&quot; data-original-height=&quot;633&quot; data-original-width=&quot;919&quot; height=&quot;275&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiTwnNnJK6mxhd4hZmEzX2eveMxOgW8ne7F2fNuNjyZKqv1HdGnRYFiZ2o1UOt3S3jn1_rcIht76PHJSHdQzSz2xhtlpMlhcZz0Lpng0b9_nj4Fmk485F-gxLEFZGpP8pJbafGBQwJy2_kURXVeH8P1ffcs4Yve8DBAQNLLsR6O3zWjPf2aPQ/w400-h275/Screenshot%20from%202025-06-05%2014-37-20.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;p&gt;“Is this program thread safe? It depends!” 😱&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;“Thread-safety is a property of the program and the implementation! You can’t tell if a program is thread-safe unless you know both.” If the program is running on Python 3.10 and later, the program prints the expected “1 million” because of context-switching in the Global Interpreter Lock (GIL). If the program is run using Python 3.9 or with free-threading enabled, the program prints “random nonsense”.&lt;/p&gt;&lt;p&gt;Mark shared a diagram of the “synchronization quadrants” from Kevlin Henney, where the vertical axes are “Mutable” and “Immutable”, and the horizontal axes are “Unshared” and “Shared”. The top-right quadrant corresponding to “Mutable and Shared” is red and shows that “Synchronization is required,” where all other quadrants show that “Synchronization not required”.&lt;/p&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEimuPq_i5zyhH2t57iZUTT56n9fD6-3dJ9kuGBFAMuAnqy3cdfkK7VAl_ee-jTigStIFWWqPEVRQdZuhyoNewhSLHDwqPQ26y1dnlnWdkWooRxn08DwtqMOXQVy-pieY7u9f9XOFKvQOBedLaMsBcvWKte2CqNM-cMzlJNszit8r-nnvCQh5g/s909/the_synchronisation_quadrant-1.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;700&quot; data-original-width=&quot;909&quot; height=&quot;308&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEimuPq_i5zyhH2t57iZUTT56n9fD6-3dJ9kuGBFAMuAnqy3cdfkK7VAl_ee-jTigStIFWWqPEVRQdZuhyoNewhSLHDwqPQ26y1dnlnWdkWooRxn08DwtqMOXQVy-pieY7u9f9XOFKvQOBedLaMsBcvWKte2CqNM-cMzlJNszit8r-nnvCQh5g/w400-h308/the_synchronisation_quadrant-1.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p&gt;“With sharing and mutability, bad things happen”, and unfortunately, if we want parallelism in Python, “a lot happens in [the shared mutable] quadrant”. We need to move stuff either down (towards immutability) or left (towards unshared). So, how can we do that in Python? Mark gave examples:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;&lt;b&gt;Data structures that are immutable&lt;/b&gt;, today Python only provides frozenset and tuple. Could add more data structures for immutability.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Data locality&lt;/b&gt;, which means only accessing data from one thread.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Serialization&lt;/b&gt;, which is “locks”, including “the lock” (GIL), which Mark considers “underrated”.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Regions&lt;/b&gt;, which is an area of code or data where there is serial execution. Currently, the only robust way of implementing regions beyond “strong discipline” is using multiple interpreters.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Stop-the-world mutability&lt;/b&gt;, which Mark describes as “switching between the bottom-right (shared and immutable) and the top-left (unshared and mutable). This is already used in some places for free-threading.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Stop-the-world mutability will be relevant in the future as “Python types and modules have to be shared but also break the language if they are immutable”. “There is opportunity for deadlocks and the process is not theoretically sound, but [stop-the-world mutability] is reasonably effective in practice”. The biggest downside is that “it’s very slow to mutate these objects, you don’t want to [mutate] often”.&lt;/p&gt;&lt;p&gt;Mark then warned the audience that we were leaving the “fact” section of the talk and entering into the “opinion” section with what he believed Python ought to do.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Short-term: More immutability!&lt;/h2&gt;&lt;p&gt;In the short term, Mark posited that “regardless of the concurrency models we have, more immutability is good”. There are C APIs that allow mutation of objects that “really shouldn’t be mutated,” like strings and tuples.&lt;/p&gt;&lt;p&gt;Mark also pointed out places where mutability is allowed today, “because [the objects] were mutable before, but not for any good reason,” like functions and &lt;a href=&quot;https://docs.python.org/3/howto/mro.html&quot;&gt;class method resolution order&lt;/a&gt; (MRO). Mark was “sure that people use [this mutability property] because it is possible, but not for good reasons”.&lt;/p&gt;&lt;p&gt;Mark suggested adding “freezing” methods to data structures like bytearrays, lists, and dictionaries to allow sharing these objects without worrying whether another thread would modify them. Barry Warsaw brought up that he had proposed a “freeze protocol,” which was rejected back in 2005. Barry asked whether the PEP should be brought back, which Mark agreed with, although the details as to why the PEP was rejected weren’t immediately clear.&lt;/p&gt;&lt;p&gt;Finally, Mark suggested making modules and classes “stop-the-world mutable”.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Long-term: Robust model of parallelism&lt;/h2&gt;&lt;p&gt;Long-term, Mark wanted to see a “robust model for parallelism” in Python. There are a few models out there, like OCaml, which “is a functional language that has mutability and previously was single-threaded”. OCaml’s model where they have keywords like “local” and “shared” with “well-defined transitions”. Mark’s other example was an upcoming talk at the Language Summit, specifically free-threading.&lt;/p&gt;&lt;p&gt;Mark posited that “by default, code that isn’t safe should raise an exception” and that there “should not be any accidentally unsafe code,” pointing to Rust and Haskell, which allow programmers to explicitly disable safety using specific keywords like “unsafe”. Mark closed by quoting the Zen of Python, “that errors should not pass silently,” where “race conditions are silent errors” and to “avoid guessing” where “race conditions are just guesses”.&lt;/p&gt;&lt;p&gt;Discussion&lt;/p&gt;&lt;p&gt;Thomas Wouters wanted to “push back” on the notion that users shouldn’t be using the mutability of functions, for example. “These are properties that not only are actively used in order to create new things. Rewriting bytecode is how popular packages in the Python community actively work, we can’t break them”. Guido van Rossum countered, saying that rewriting bytecode already “breaks every Python version”, which Thomas agreed with, saying that “this is understood as being part of the deal. Making function objects immutable means they need an entirely different approach”.&lt;/p&gt;&lt;p&gt;Pablo Galindo Salgado called out the importance of understanding how and why people are using (or abusing) an API to provide a better experience. Pablo wanted to understand use-cases because oftentimes users “didn’t want to do what they were doing” and understanding use-cases meant “[core developers] can add something better”. He added, “We cannot blanket approve every usage of a language as a feature”.&lt;/p&gt;&lt;p&gt;Sam Gross didn’t think that making functions immutable would make free-threading much better, and that stop-the-world immutability doesn’t seem worth the backwards incompatibility pain.&lt;/p&gt;&lt;p&gt;Martin DeMello asked Mark&#39;s proposal for making race conditions into exceptions, to which Mark quickly brought up a slide with a code example that included a “RaceConditionException,” which garnered a chuckle from the room. “This is what it would look like”, replied Mark, “but how [the exception] would be implemented depends on the [parallelism model], which is why we need those models”. Martin remarked that this seems like it would be difficult, to which Mark agreed, “This is not an easy change”.&lt;/p&gt;&lt;p&gt;Sam added that Rust and other languages don’t prevent race conditions, they only prevent data races, and that “in practice helps catch bugs statically,” it doesn’t actually make Rust code thread-safe. “You still have to think about high-level things, but it doesn’t prevent all bugs and race conditions”.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/3678678226284925931'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/3678678226284925931'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025-uncontentious-talk-about-contention.html' title='The Python Language Summit 2025: An Uncontentious Talk about Contention'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiTwnNnJK6mxhd4hZmEzX2eveMxOgW8ne7F2fNuNjyZKqv1HdGnRYFiZ2o1UOt3S3jn1_rcIht76PHJSHdQzSz2xhtlpMlhcZz0Lpng0b9_nj4Fmk485F-gxLEFZGpP8pJbafGBQwJy2_kURXVeH8P1ffcs4Yve8DBAQNLLsR6O3zWjPf2aPQ/s72-w400-h275-c/Screenshot%20from%202025-06-05%2014-37-20.png" height="72" width="72"/></entry><entry><id>tag:blogger.com,1999:blog-8520.post-4253593654676004774</id><published>2025-06-12T09:32:00.004-04:00</published><updated>2025-06-12T09:32:29.115-04:00</updated><title type='text'>The Python Language Summit 2025: State of Free-Threaded Python</title><content type='html'>&lt;p&gt;“Does it make sense to move to the next phase of &lt;a href=&quot;https://peps.python.org/pep-0703/&quot;&gt;PEP 703&lt;/a&gt;?”, core developer Matt Page opened his presentation to the Language Summit. Free-Threaded Python has come far since the last Language Summit, where &lt;a href=&quot;https://pyfound.blogspot.com/2024/06/python-language-summit-2024-free-threading-ecosystems.html&quot;&gt;Daniele Parmeggiani presented on free-threaded Python&lt;/a&gt; using the then-newly-added “&lt;span style=&quot;font-family: courier;&quot;&gt;--disable-gil&lt;/span&gt;” option.&lt;/p&gt;&lt;p&gt;Matt had prepared a status report for free-threaded Python on all of the axes that PEP 703’s acceptance had laid out: Performance, Stability, Maintainability, and Adoption, and wanted to ask core developers when the PEP should proceed to the next stages.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Performance&lt;/h2&gt;&lt;p&gt;The performance gap for free-threaded and non-free-threaded Python was 40% in Python 3.13. This has been reduced to less than 10% for most platforms, and the gap is platform-dependent. For macOS, there is not much difference, but for Ubuntu and Windows, the gap is around 7-8% slower for single-threaded workloads. Matt stressed that these values are “point-in-time” and that the team will keep working on them, but “will eventually reach a point of diminishing returns”.&lt;/p&gt;&lt;p&gt;Matt added that the memory overhead was more substantial at 20% more for pyperformance workloads compared to without free-threading, but that the team “was just starting to work on this”. Matt suspected that the memory overhead was “mostly fixed” and thus “would be a smaller percentage overhead in real workloads”.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Stability&lt;/h2&gt;&lt;p&gt;Matt shared that the architectural changes for free-threaded Python had all been completed and that none of the reported issues “required any large architecture changes”. “[Sam’s] design has proven to be sound, which is great for the future”. The issues that are reported are not disproportionate compared to bugs reported about the rest of the CPython project, and “around half of the issues are data races reported by [ThreadSanitizer], which are easier to fix”.&lt;/p&gt;&lt;p&gt;The remaining work is creating a Stable ABI for free-threading and continuing to fix thread-safety issues with standard library modules. The most popular areas of Python, like dictionaries and lists, are already thread-safe, but the team still has to “work through the long-tail” of APIs.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Maintainability&lt;/h2&gt;&lt;p&gt;Matt acknowledged that free-threaded Python was a step-function of complexity and asked, “Can core developers support this complexity?” Matt noted that the set of contributors to free-threaded Python architecture was small but growing. Luckily, “the complexity is well-contained. Most people won’t need to touch free-threaded code and most core developers will only interact with critical sections which are well-documented”. Matt shared that there is “comprehensive documentation” for both core developers and users looking to parallelize workloads.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Adoption&lt;/h2&gt;&lt;p&gt;Quansight Labs has &lt;a href=&quot;https://py-free-threading.github.io/tracking/&quot;&gt;created a resource page&lt;/a&gt; available for users trying out free-threaded Python or migrating their code and extension modules to support free-threaded Python. There’s also a &lt;a href=&quot;https://discuss.python.org/t/free-threaded-python-community-discord/88571&quot;&gt;Discord channel&lt;/a&gt; and &lt;a href=&quot;https://discuss.python.org/c/threading/38&quot;&gt;Threading category on the Python Discourse&lt;/a&gt; for users looking for help. The resource page also hosts a &lt;a href=&quot;https://py-free-threading.github.io/tracking/&quot;&gt;free-threading compatibility status for important Python packages and tools&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Matt also shared another &lt;a href=&quot;https://hugovk.github.io/free-threaded-wheels/&quot;&gt;compatibility status tracker&lt;/a&gt; created by Hugo van Kemenade that automatically updates based on the availability of free-threaded wheels (wheels with an ABI tag that ends in “t” like “cp13t”) for popular Python packages with extension modules. The current status was around ⅙ of the top 360 projects on PyPI, with extension modules supporting free-threading, notably popular scientific packages like numpy, pandas, and scipy.&lt;/p&gt;&lt;p&gt;Matt also recommended anyone interested in more about community adoption to watch Lysandros Nikolaou and Nathan Goldbaum’s talk at PyCon US titled “&lt;a href=&quot;https://us.pycon.org/2025/schedule/presentation/42/&quot;&gt;Unraveling Community Support for Free-Threaded Python&lt;/a&gt;”. The recording is &lt;a href=&quot;https://www.youtube.com/watch?v=EuU3ksI1l04&quot;&gt;now available on YouTube&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Matt asked for a few outcomes from the free-threading discussions at the Language Summit. Firstly, Matt hoped that core developers might start thinking about free-threading from the beginning when designing and developing new language features. He followed up with a suggestion to focus on performance and correctness when free-threading is enabled.&lt;/p&gt;&lt;p&gt;Secondly, Matt was hoping to receive a signal for the community that free-threading was not going to disappear suddenly. “We need to see more people using [free-threading] to find the next set of bugs and to test the implementation”, Matt continued, “and if [free-threading] has an air of experimentality, it’s harder to justify adopting [free-threading]”.&lt;/p&gt;&lt;p&gt;The current status of PEP 703 is that free-threading has been conditionally accepted by the Steering Council, and that the ability to back out all free-threading code from CPython is reserved by the Steering Council in case there are problems with the implementation. That status hasn’t materially changed since the PEP’s conditional acceptance.&lt;/p&gt;&lt;p&gt;Matt concluded his presentation by asking whether the Steering Council and core developers had thoughts or concerns on proceeding to the next stage of PEP 703 and free-threading.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Discussion&lt;/h2&gt;&lt;p&gt;Core developer Eric Smith asked whether removing the Global Interpreter Lock (GIL) would cause a “permanent mental overhead for core developers” and asked how often other core developers made a change in Python that broke free-threading. Matt shared that this situation was “pretty rare so far,” especially beyond ThreadSanitizer failures.&lt;/p&gt;&lt;p&gt;“At the C-layer, you already had to think about the GIL potentially getting released”, commented Thomas Wouters, “...cases that were protected by the GIL before PEP 703 can now easily be protected by critical sections”. Thomas added, “There are cases where you need to think about [free-threading], but for the most part it’s not that big of a deal” and “The tools from PEP 703 make it not hard to write correct code, even under free-threading”.&lt;/p&gt;&lt;p&gt;Brandt Bucher pushed back on Thomas’s comments that the interpreter already had to worry about reentrant code, saying that free-threading is another flavor and that there definitely is “mental overhead” and an “ongoing concern and constant friction”. Especially in previously straightforward cases like getting an item from a list.&lt;/p&gt;&lt;p&gt;Brandt asked whether 16% of PyPI packages supporting free-threading was enough to say that free-threading couldn’t become a “rugpull” situation, and if not, “what number would the Steering Council be comfortable with?” Brandt also identified that not only the availability of free-threaded wheels, but also their usage through downloads should be examined, to see whether free-threading was being used in the real world.&lt;/p&gt;&lt;p&gt;Brandt also commented on unmaintained packages with extensions that “would never be thread-safe”. Brandt asked whether the plan was to keep the functionality that falls back to using the GIL when a module isn’t marked as free-threading safe. Sam Gross confirmed that “[he] didn’t see any reason to remove the optional GIL”, even when free-threading became the default.&lt;/p&gt;&lt;p&gt;When asked about thread-safe containers and data structures for users, Matt answered that “they wanted to provide thread-safe data structures”, but that it “hasn’t been a focus right now” and that the work would likely start as a package on PyPI before moving to the standard library after “getting the abstractions right”.&lt;/p&gt;&lt;p&gt;Gregory Smith, introducing himself as a “token” Steering Council member, said he wanted to “listen to what other [core developers] are saying at the Language Summit and PyCon US” and to get a “vibe check” about how free-threading is going. Greg shared that the Steering Council was “waiting for the end of PyCon US to give an update on [PEP 703]” and that the current status is a bit of a “chicken and egg” situation between the experimental labeling and whether users can expect free-threading in the future to drive more adoption.&lt;/p&gt;&lt;p&gt;Thomas provided his perspective that “maintainability” was the biggest question in his mind. The number of projects going on, JIT, faster CPython, free-threading, general interpreter development, that it is “probably inevitable there’ll be times with proposed changes that these projects will be brought into conflict”. Thomas highlighted the need for a way to resolve the tradeoffs, like performance versus stable free-threading, and that “as a community, we need to own the shared responsibility that the entire ecosystem works”.&lt;/p&gt;&lt;p&gt;Pablo Galindo Salgado, who is also a Steering Council member, was concerned that we were seeing the “easy part” of free-threading adoption. “Numpy and the interpreter are receiving lots of support from people who know what they’re doing”. Pablo was curious how the work to adopt free-threading in other extensions would proceed without this expertise and resourcing. Pablo didn’t think this was a blocker for free-threading, but “made him less enthusiastic about the message to ‘just do it’” and would like to avoid a situation where a decision is made but then the “long-tail of adoption takes forever because we didn’t understand how to drive [adoption]”.&lt;/p&gt;&lt;p&gt;Thomas agreed that more documentation was needed on how to debug issues like ThreadSanitizer, to set expectations for users and library maintainers, and to build tools for thread-safety for libraries and users. Thomas felt confident that this would get done and that “the work isn’t unknown work, we know what we need to do”.&lt;/p&gt;&lt;p&gt;“I think we’re on that precipice of scientific Python really embracing more of the free-threading” said Carol Willing, recalling the infamous Python 2 to 3 transition for scientific Python projects “which was the initial driver for greater adoption of Python 3”. Carol hoped that there would be a huge push this year on free-threading and building on the awareness and the documentation: “I was always skeptical of whether we would get the social things in-place, and I think we are and we’re doing it well.”&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/4253593654676004774'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/4253593654676004774'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025-state-of-free-threaded-python.html' title='The Python Language Summit 2025: State of Free-Threaded Python'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-1062832901551124882</id><published>2025-06-12T09:32:00.003-04:00</published><updated>2025-06-12T09:32:18.016-04:00</updated><title type='text'>The Python Language Summit 2025: Fearless Concurrency</title><content type='html'>&lt;p&gt;Tobias Wrigstad, Matthew Parkinson, and Fridtjof Stoldt attended their first Python Language Summit to talk about some new concurrency concepts with core developers. Their slides have great diagrams, so I recommend checking them out. Tobias delivered the presentation to core developers, opening with a “potentially contentious statement” that “[data races and concurrency bugs] were the future that free-threaded Python programmers would see if free-threading was adopted for Python programs”.&lt;/p&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi-gHIfPZi4EIA1RJnTrUOrDkWemTs9Vdb0dwGUoC90Ty4DO9iSDb_WX38A8LDg_9_D_pDRMMNKyuSmNfB3ERBG5yzwjHboTUQnmBtWmuul0kfXytagG8ManMR3l2O8ZeJcMvUtS-UghM_Jd-D6nM0LUhne4vg4Z5RDmkGxqw8kDRrPw2SaVQ/s1279/Screenshot%20from%202025-06-04%2008-54-46.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;720&quot; data-original-width=&quot;1279&quot; height=&quot;180&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi-gHIfPZi4EIA1RJnTrUOrDkWemTs9Vdb0dwGUoC90Ty4DO9iSDb_WX38A8LDg_9_D_pDRMMNKyuSmNfB3ERBG5yzwjHboTUQnmBtWmuul0kfXytagG8ManMR3l2O8ZeJcMvUtS-UghM_Jd-D6nM0LUhne4vg4Z5RDmkGxqw8kDRrPw2SaVQ/s320/Screenshot%20from%202025-06-04%2008-54-46.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;“Off to the data races!”&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;The issue is when a value, such as “A” in the above diagram, is shared across multiple threads and written concurrently. “There is no easy way to tell when an object is shared. In the worst case, you have to read the whole program”.&lt;/p&gt;&lt;p&gt;These data-race bugs are also difficult to resolve using existing tools like “ChatGPT or StackOverflow,” which are only able to solve “syntax-driven problems,” and only after drawing the object graph do we see problems. Tools like ThreadSanitizer (TSan) can help, “but you first need to understand that you need to use a tool”. “As a Python programmer, I’m assuming this is not in your typical toolchain”.&lt;/p&gt;&lt;p&gt;Tobias continued, “The PEP 703 work has shown that it’s costly for the runtime to protect itself against racing code. Can we lift this problem up and talk about this problem at the Python level and make Python data-race free? Can we get an exception instead of a race?”&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Deep Immutability&lt;/h2&gt;&lt;p&gt;Referencing the “freezing” proposal that Mark Shannon had spoken about just hours ago in his Language Summit talk “An Uncontentious Talk about Contention”, “deep immutability” is one option for resolving data races in Python. Some performance improvements could be gained by adopting this model.&lt;/p&gt;&lt;p&gt;This model makes “all shared data immutable” so “there can be no data races” and is “trivial to check at runtime”. However, to do so would require sacrificing mutability, which is “common in Python programs”. “More immutability is great, but it’s not a solution to all our problems.”&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Rust’s ownership model&lt;/h2&gt;&lt;p&gt;“If we squint a little bit, we can explain Rust’s ownership model as ‘objects with a reference count greater than 1 cannot be mutated’”, Tobias explained. Rust’s ownership model allows for mutable objects as long as an object isn’t referenced more than once.&lt;/p&gt;&lt;p&gt;Adopting Rust’s model would require a “move operator” which, when used, “torches the original reference” and moves the reference to a new owner. This operator provides a safe transfer of mutable objects when a reference count is exactly 1.&lt;/p&gt;&lt;p&gt;However, “the same rule that prevents Y being assigned to X prevents nice things that people like to do”. This approach would “massively restrict which object graphs are valid” and “many Python object graphs in practice don’t look like this”, instead usually containing “reference loops”. Adopting the Rust ownership model in Python would “require rewriting most existing Python programs”.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Region-based ownership model&lt;/h2&gt;&lt;p&gt;The group proposed instead a “region-based model” they had designed called “Lungfish” that is “more permissive than Rust’s data model” but is “still data-race free”.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Regions are “namespaces for data”. Regions are a group of mutable objects that are isolated from the outside, and all contained objects are shared, transferred, or frozen altogether. Regions can be nested within other regions, too.&lt;/p&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg9PV7DIMN6qAHrsiZk1Vz0ybwx5ndJkfcSUzFMGi5c1WcyMNlVBzT0QAG4Yp9Ee7XNuBQwmcdbKUxyXkylC14LO39F8Sx-Qnla2_czkRAhNlcEV9WONc-65WWtaZSO_H_8G1GKwaYCt7454oz3Mu86jX-QRkjy6bU8a5P_QizcT3JyCQNlrw/s588/Screenshot%20from%202025-06-04%2017-14-42.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;476&quot; data-original-width=&quot;588&quot; height=&quot;259&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg9PV7DIMN6qAHrsiZk1Vz0ybwx5ndJkfcSUzFMGi5c1WcyMNlVBzT0QAG4Yp9Ee7XNuBQwmcdbKUxyXkylC14LO39F8Sx-Qnla2_czkRAhNlcEV9WONc-65WWtaZSO_H_8G1GKwaYCt7454oz3Mu86jX-QRkjy6bU8a5P_QizcT3JyCQNlrw/s320/Screenshot%20from%202025-06-04%2017-14-42.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;Can’t move Region “r” to thread “2” because the borrow count is not 1.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Regions are “an enclosure of objects” that is tracked by their “borrow count”, which is the number of references that are “pointing into a region”. Objects are “slurped” (technical term) into a Region, and the borrow count increases for each reference pointing into the region. Regions can only be “moved” when the borrow count is 1, and any moves that don’t have a borrow count of 1 indicate a data race and should raise an exception.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;table align=&quot;center&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; class=&quot;tr-caption-container&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2-vE2D2yIPTfOuy2tDOlJXEfrE4XBn4c_82Aj_xdmD21XSdOrWQLdRFC6YS34Wb8Y8zXbED0krrqJMRaEaBwAlTWhDI1lV4Qw8lS-N30wZOcV8YeFwP2zGyfwS5wo3iKiISerIMxDmk3xBYtA_7PT1XhAtJEx363UO6wDkaxQZMGctafGvg/s657/Screenshot%20from%202025-06-04%2017-14-01.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: auto; margin-right: auto;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;639&quot; data-original-width=&quot;657&quot; height=&quot;311&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2-vE2D2yIPTfOuy2tDOlJXEfrE4XBn4c_82Aj_xdmD21XSdOrWQLdRFC6YS34Wb8Y8zXbED0krrqJMRaEaBwAlTWhDI1lV4Qw8lS-N30wZOcV8YeFwP2zGyfwS5wo3iKiISerIMxDmk3xBYtA_7PT1XhAtJEx363UO6wDkaxQZMGctafGvg/s320/Screenshot%20from%202025-06-04%2017-14-01.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;tr-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;Threads 1 and 2 share region r, where thread 1 holds the lock with access to the referenced region r, and has two references from X to A and Z to 42. Hence, the borrow count of 3.&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;&lt;p&gt;Another option is to share the ownership of a region between two or more threads. Doing so would “move the ownership of the region within a lock shared between threads”. “When a thread owns the lock, then that thread can create points within the region and access the data, and the borrow count increments”. This borrow count increment needs to happen to track when the thread can release the lock safely, meaning there are the correct number of references to objects within the region.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;What’s next for Lungfish and “Fearless Python”?&lt;/h2&gt;&lt;p&gt;The group has a plan to introduce Lungfish and its concepts to Python through a “series of four Python Enhancement Proposals (PEPs)”. The order and current status of each PEP is the following:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul style=&quot;text-align: left;&quot;&gt;&lt;li&gt;The first PEP is for “deep immutability” and was “almost finished with 99% of tests passing on Python 3.12”. The team plans to upgrade to 3.13 and then submit the PEP.&lt;/li&gt;&lt;li&gt;The second PEP would propose “cyclic immutable garbage with reference counting” and also “adding atomic reference counting for the new immutable objects”. This PEP is around 80% done.&lt;/li&gt;&lt;li&gt;The third PEP would be for “sharing immutable data between threads and subinterpreters (PEP 734). Tobias added that “subinterpreters can be a good delivery model for some concurrency model on top of [subinterpreters]”. This PEP and project are around 50% done.&lt;/li&gt;&lt;li&gt;The fourth PEP would add sharing mutable data between threads and subinterpreters using Regions.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Tobias closed by sharing why the project was named “Lungfish”: “the project can be used with or without GIL(s)” (pronounced “gills”), which was received with equal parts laughter and groans at the pun.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Discussion&lt;/h2&gt;&lt;p&gt;Barry Warsaw asked, “Would regions be a first-class data object in Python? Tobias answered “yes”, the proposal included a “&lt;span style=&quot;font-family: courier;&quot;&gt;Region()&lt;/span&gt;” object that can be assigned names like so:&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: courier;&quot;&gt;&lt;span style=&quot;white-space: normal;&quot;&gt;r = Region()&lt;br /&gt;&lt;/span&gt;r.f = 42&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Thomas Wouters wondered “whether regions would get used ubiquitously”, asking “which region does the sys module live in?” as a particularly difficult example. The group answered that they “are not sure what the answer is” and that there “are some concurrency issues there” and “that you want [the sys module] to be in a REPL thread”. “People in this room probably have better ideas here”.&lt;/p&gt;&lt;p&gt;David Hewitt, maintainer of the Rust PyO3 project, contrasted the proposed Region object with Rust’s “mutex” type and Python’s “Lock” type. Python’s Lock type doesn’t protect any data inside the lock, whereas Rust’s mutex type does protect data within the mutex. Rust’s mutex allows taking the data out of the mutex if you own the mutex, changing the mutability, and more, similar to Regions. David “has become familiar with the mutexes in Rust, and coming back to Python’s locks feels like a bit of a paper cut”.&lt;/p&gt;&lt;p&gt;David asked whether, instead of “introducing a new concept with Regions,” the three would introduce the concept more similar to a Rust mutex instead. Tobias answered that the protection mirrors the mutex, but that Regions uniquely allow nesting “to build a tree of regions” and a “notion of transitive closure of state in the object graph” that “transcends its use within a mutex, such as when the region is transferred or how freezing propagates within a region”. “Mutexes are one use of a Region, but not the only use”.&lt;/p&gt;&lt;p&gt;Donghee Na asked about the stability of existing behavior. Fridtjof answered that the three “had added tests specifically for the new behavior of immutability”, saying that the “immutability and freezing feature branches are really solid” and that the region feature branch is “more experimental”.&lt;/p&gt;&lt;p&gt;Donghee continued and asked whether the community would need to modify its code. Tobias answered, “Yes, if they want to take advantage of the benefits”. Matthew answered, “Pure Python can directly support regions, if you have a C library, then you’d need to add some modifications to your code to benefit”.&lt;/p&gt;&lt;p&gt;“C libraries would be an opt-in model at the module level”. This is similar to free-threading, where modules need to opt in; otherwise, the runtime doesn’t run with free-threading. “When you freeze an object graph, if [the runtime] encountered an object that doesn’t implement freezing, then you backtrack the freezing”. “You would need to register your types as freezeable”.&lt;/p&gt;&lt;p&gt;Martin DeMello asked whether freezing a region was a “one-way operation,” noting that freezing a region removes the object graph. Tobias answered that at the moment, “it does not allow [frozen objects] to be mutated until [the frozen objects] hit the finalizer, which turns objects back to be mutable again”. “We could do something like you’re proposing, I’m just worried,” with laughter at the mention of the finalizer. Tobias added a comment about “a potential copy-on-write” type to allow users to enable this use case.&lt;/p&gt;&lt;p&gt;Pablo Galindo Salgado asked about C extensions, “If I incref (increase a reference count), how does the region know whether this is an internal reference or an external reference?” Fridtjof replied that “there are two answers”, first being that “if the C extension had opted in, the system assumes that [the C extension author] is doing the right things” which in Pablo’s case would require a &lt;span style=&quot;font-family: courier;&quot;&gt;PyRegion_IncRef()&lt;/span&gt; function or similar. The second answer is that if the C extension doesn’t opt in, the system would be able to “reestablish the borrow count” for “backwards compatibility” by “leveraging the garbage collection mechanism that’s already there”.&lt;/p&gt;&lt;p&gt;Overall, there was definitely interest in the trio’s proposal from core developers due to the new problems that free-threaded Python will bring to Python users regarding concurrency.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/1062832901551124882'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/1062832901551124882'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025-fearless-concurrency.html' title='The Python Language Summit 2025: Fearless Concurrency'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi-gHIfPZi4EIA1RJnTrUOrDkWemTs9Vdb0dwGUoC90Ty4DO9iSDb_WX38A8LDg_9_D_pDRMMNKyuSmNfB3ERBG5yzwjHboTUQnmBtWmuul0kfXytagG8ManMR3l2O8ZeJcMvUtS-UghM_Jd-D6nM0LUhne4vg4Z5RDmkGxqw8kDRrPw2SaVQ/s72-c/Screenshot%20from%202025-06-04%2008-54-46.png" height="72" width="72"/></entry><entry><id>tag:blogger.com,1999:blog-8520.post-929601191271122263</id><published>2025-06-12T09:32:00.001-04:00</published><updated>2025-06-12T09:32:06.043-04:00</updated><title type='text'>The Python Language Summit 2025: Challenges of the Steering Council</title><content type='html'>&lt;p&gt;Eric Snow opened his presentation about the Python Steering Council with an appreciation of current and former Steering Council members and all their hard work, which was met with applause from Language Summit attendees. “... and the same goes for Guido, who took 5 people to replace”.&lt;/p&gt;&lt;p&gt;“We’ve had several years of experience with the Steering Council”, Eric opened, “this discussion is meant to be an opportunity to talk about and identify ways to make the Steering Council better”.&lt;/p&gt;&lt;p&gt;Eric started by listing the aspects of the Steering Council that have worked, “the language and its projects haven’t stagnated”, many PEPs have been finalized, “and most notably, sensitive issues have come up and the Steering Council has demonstrated leadership”.&lt;/p&gt;&lt;p&gt;In Eric’s opinion, the biggest issue was that he had been “surprised” by some responses from the Steering Council. What factors make the work of the Steering Council difficult? “...being diligent about being fair and united, which takes time and effort”.&lt;/p&gt;&lt;p&gt;“Effort and time are limited resources for volunteers”. Eric identified that in addition to managing the language, the Steering Council has to spend time managing the Developers’ in Residence, doing community outreach, addressing Code of Conduct violations, and creating presentations for PyCon US.&lt;/p&gt;&lt;p&gt;“There’s a temptation to compare core development under Guido to core development under the Steering Council,” Eric admitted he’s caught himself doing in the past. “The comparison isn’t helpful or fair”.&lt;/p&gt;&lt;p&gt;For Eric, it isn’t always clear whether the Steering Council is the voice of consensus or whether they are the deciders. The Steering Council is “inherently a bottleneck of core development”. “The nature of committee work combined with a volunteer schedule means it can take a while to discuss and reach a decision”. This directly impacts the pace of runtime development.&lt;/p&gt;&lt;p&gt;Eric also highlighted that “there’s a [latency] penalty for PEP authors whenever there is a new Steering Council,” which, according to PEP 13, happens on a yearly cadence. This is despite having &lt;a href=&quot;https://hugovk.github.io/python-steering-council/&quot;&gt;a relatively consistent set of people on the Steering Council&lt;/a&gt; year-over-year. Eric called out his own &lt;a href=&quot;https://peps.python.org/pep-0554/&quot;&gt;PEP 554&lt;/a&gt;, being particularly affected by the Steering Council turnover.&lt;/p&gt;&lt;p&gt;“It’s difficult to not have feedback from [the Steering Council] in the midst of discussion thinking that there was consensus or that issues had settled only to be surprised by a later response from the Steering Council”. Eric shared that this had happened multiple times to him in the past and called the experience “deflating”. Eric said it seemed important to have a “sense of where the Steering Council or a delegate was on discussions as they unfolded”.&lt;/p&gt;&lt;p&gt;Eric was looking to discuss potential improvements, and he noted there had been a few in the past, including delegating decision-making and publishing notes.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Discussion&lt;/h2&gt;&lt;p&gt;Carol Willing, inaugural Steering Council member, commended Eric on “[doing] a great job putting together a positive presentation about the challenges”. What Carol remembered from the first Steering Council was thinking “there’s a ton of stuff to do and [she couldn’t] believe Guido was doing all of this on his own”. Carol identified that project management had become the biggest issue and that a “secretary or assistant role wasn’t the right terminology”. “It’s time to revisit the workload… [the problems] are largely due to the volume of stuff on the Steering Council’s plate”.&lt;/p&gt;&lt;p&gt;Brandt Bucher felt that the Steering Council appeared to have a policy of “don’t participate in discussions and only speak with one voice after the discussion had taken place”. Brandt felt this “didn’t feel like the leadership role he imagined the Steering Council would best function in”. Brandt referenced PEP 779, which received engagement from the community but hadn’t received any comments from the Steering Council.&lt;/p&gt;&lt;p&gt;Barry Warsaw, current Steering Council member, said he frequently asks himself, “Am I speaking as a core developer?” Barry referenced how Guido approached discussions and engaged as a core developer, not as a BDFL. Barry identified speaking with consensus as what he thought was the biggest delay, and that it “takes time and coordination”.&lt;/p&gt;&lt;p&gt;Pablo Galindo Salgado, also in the current Steering Council, shared that another issue was that you can’t only participate in discussions that you care about. There’s a scaling issue: “you have to participate in all PEP discussions, and not just to comment, you have to review [the PEP]”. Pablo also highlighted that there’s a problem of engaging with a topic as an individual core developer and then later discussing the topic within the Steering Council, having a different sentiment or reaction, thus causing surprise. “This will happen more if [core developers] expect the Steering Council to participate in discussions, and I am not sure that is going to fly”.&lt;/p&gt;&lt;p&gt;Emily Morehouse, Steering Council member, added that being on the Steering Council is a “seasonal job,” referencing the “onslaught of PEPs submitted ahead of the beta1 cut-off,” which was met with guilty laughter from core developers. Emily suggested being more transparent about a timeline for PEPs would be considered, and when PEPs would need to be submitted to be accepted in time for a particular release.&lt;/p&gt;&lt;p&gt;Mariatta asked about the transparency of funding for the Steering Council. “The Steering Council makes decisions about how the funding is spent, such as PyCon grants and sprints. Are there other ways that the funds can be spent? Can we request grants?”&lt;/p&gt;&lt;p&gt;Emily answered that much of the funding the Steering Council processes had already been “set aside” for specific goals like core developer sprints and the Developers-in-Residence program. Emily shared that “even as a Steering Council member, I want more transparency for [funding]” and that they are “striving for an annual report for how money is being spent”. Some of the funding is a “black box” for the Steering Council as well, so Emily agreed that there should be “more transparency, especially now that there is a substantial amount of money going through the Steering Council budget” and the ability to answer “what happens when we want to use money elsewhere?”&lt;/p&gt;&lt;p&gt;Carol agreed that “more transparency is needed and will solve a lot of the stress” that Steering Council members were feeling.&lt;/p&gt;&lt;p&gt;Guido van Rossum brought up the “Brown Act” in California, which requires that all meetings be open to the public for local government groups in charge of public infrastructure without private deliberations, barring personnel or sensitive issues. “It’s a completely different model” compared to the model set in the Steering Council charter, “but it gives a lot of transparency”. Guido liked the idea of “doing something dramatically different to get the situation unstuck”.&lt;/p&gt;&lt;p&gt;Pradyun Gedam commented on the continuity problem, which the &lt;a href=&quot;https://pyfound.blogspot.com/2025/06/python-language-summit-2025-packaging-governance-process.html&quot;&gt;newly proposed Packaging Council&lt;/a&gt;, attempted to solve by “splitting the Packaging Council into two cohorts that are elected for two years each, offset by one year”. “This approach might help with some of the [continuity issues]”.&lt;/p&gt;&lt;p&gt;Thomas Wouters said when he was previously on the Steering Council that the members were “always trying to figure out what consensus was”. Thomas’s impression from a previous discussion about Zstandard was “going one way”, but after Gregory Smith ran a poll on Discourse, “the result was very different”. Thomas asked, “Does that mean we have been governing wrong, or should we be doing polls more often?”&lt;/p&gt;&lt;p&gt;Barry replied he thought that “polls are useful, but can’t be relied on completely” as they represented an “incomplete picture of the community”. “There are millions of users that will be affected and aren’t dialed in to Discourse, [the Steering Council] has to represent them, too”.&lt;/p&gt;&lt;p&gt;David Hewitt asked whether a majority of PEPs should be delegated, referencing the typing, packaging, and C API groups that exist already. Emily agreed that more delegation is a “good idea”, but “needed to be formal”. Emily said, “The typing council is a good example of a boundary of responsibility,” but “without a formal decision-making process, we end up with groups that want to help but don’t fulfill their responsibility”. Carol added that historically, most delegations were to individuals rather than working groups or councils.&lt;/p&gt;&lt;p&gt;Pablo also agreed that more delegation was good and that the Steering Council had already been delegating more and seeing success, referencing the typing council, documentation working group, and C API working group. But there are a few problems with the delegation model, like when the “people proposing the changes are a part of the council, so we can’t delegate to [that council].” Pablo also highlighted that delegation was sometimes difficult when there were two opposed groups on an issue. Pablo concluded by saying that “the more working groups we have, the better, but [the Steering Council] can’t demand a working group, so if you want to organize more, please do!”&lt;/p&gt;&lt;p&gt;Emily highlighted more issues with delegation, saying that “we have seen a lot of competing areas that people are working on”. “We’re trying to see how all of these projects work together. [The Steering Council] can’t delegate one person to be the BDFL of the JIT because they will be looking at the JIT but actually need to be looking at many other projects”.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;“We’re in a territory that the Steering Council hasn’t had to deal with in a while”, Emily continued, suggesting that the Steering Council needed to contact folks involved in other large decisions in the Python language, such as the 2 to 3 transition.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/929601191271122263'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/929601191271122263'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025-challenges-of-the-steering-council.html' title='The Python Language Summit 2025: Challenges of the Steering Council'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-492926979113671038</id><published>2025-06-12T09:31:00.004-04:00</published><updated>2025-06-12T10:48:50.108-04:00</updated><title type='text'>The Python Language Summit 2025: What do core developers want from Rust?</title><content type='html'>&lt;p&gt;What do Python core developers want from future Rust support?&lt;/p&gt;&lt;p&gt;“This talk is very timely, Rust turns 10 years old tomorrow”. David Hewitt is the maintainer of PyO3, a library that allows Python developers to more easily use Rust within a Python project. “It takes time for languages to be adopted, the test is whether a decade later the language is used”. David noted that Rust had already been mentioned multiple times earlier in the Language Summit, but also in “the Python Software Foundation’s &lt;a href=&quot;https://www.regulations.gov/comment/ONCD-2023-0002-0107&quot;&gt;RFI response&lt;/a&gt; to the US government about memory safety” regarding creating binary extensions.&lt;/p&gt;&lt;p&gt;“My belief is we’re all here to enable other developers, and we’re passionate about the tools we want to use ourselves,” noting that all opinions are valid today, whether folks want to use Rust or not.&lt;/p&gt;&lt;p&gt;David showed a graph of which languages are being used by packages on the Python Package Index (PyPI) with C, C++, Rust, and others. “Our best estimate is that somewhere between ¼ and ⅓ of all native code being uploaded to PyPI for new projects uses Rust”. “People are choosing to start new projects using Rust”.&lt;/p&gt;&lt;p&gt;David continued by sharing that PyO3 enables Python users to use Rust in their Python packages. He gave a short demonstration of how PyO3 can be used to create a simple Python module and function, and using Rust error handling in a way that maps directly to Python exceptions. PyO3 has its own build system in Maturin, is capable of generating type hints, and has many more developer-friendly features.&lt;/p&gt;&lt;p&gt;Where do Rust and Python need more work? Rust already “leans very well into supporting free-threading in Python”, but “sub-interpreters and module isolation are a challenge”. Rust has a “GCC backend” if you need to support “esoteric platforms”, but David conceded that “[GCC support] is not very mature yet, one for the future for sure”.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Should Python core developers invest in Rust?&lt;/h2&gt;&lt;p&gt;The main question that David came to the Language Summit with is in the title of the talk. “What do Python core developers want from the future of Rust support?” David broke the question down, asking whether core developers “wanted to design or endorse a Rust developer experience” for Python or if the core developers had an interest in Rust for their own toolkit.&lt;/p&gt;&lt;p&gt;Quoting the StackOverflow surveys, Rust is a “very well-loved language” and Rust developers “want to continue working with the language”. Anecdotally, David also shared that “many younger programmers are getting their start with Rust,” which could “increase the size of the talent pool” if Rust were invested in. David also suggested a “higher-level API” compared to the C API written in Rust, which could be a part of the “evolving the C API” to avoid the issues of backwards compatibility.&lt;/p&gt;&lt;p&gt;There are downsides too, David noted that going from one to two languages is a “massive step up in terms of complexity, both technical and social”. “There will probably be something better in the future, so why use it now?” David shared that “some folks believe Rust is ‘good-enough’ for what they need now, so they proceed”. Due to the current state of GCC support, “Rust would alienate esoteric platforms and that would be a shame”. David closed the downsides section with a note on naming: “CPython is ‘C + Python’, what does the C mean if there is Rust investment?”&lt;/p&gt;&lt;p&gt;David closed his presentation with a case study to look at for the adoption of Rust by a prominent C open source project: the Linux kernel. “Rust for Linux is a massively complicated project” and “[the project] is difficult not only technically but also socially” noting that some Linux kernel developers were pushing back against Rust for Linux either because they “don’t want to engage with Rust” or “don’t want their workflows to change”. Despite this, “Rust has been strategically valuable for the Linux kernel because the perception is that it enables a new generation of developers to continue contributing to the Linux kernel”.&lt;/p&gt;&lt;p&gt;Finally, David posed the question, “Is there a world for something like ‘Rust for Python’”?&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Discussion&amp;nbsp;&lt;/h2&gt;&lt;p&gt;Fred Drake asked whether David “had done any work with free-threading”? David replied that “working with Rust makes it easy to comply with free-threading,” adding that “you’d have to be using the unsafe keyword or trying really hard” to break Python free-threading with Rust. Marking Rust extension modules as “safe for free-threading” is “a lot more straightforward compared to C”. David thanked the folks at Quansight Labs for their help on PyO3 in this area.&lt;/p&gt;&lt;p&gt;Martin DeMello asked about David’s examples, such as modularizing parts of the interpreter to Rust, and whether David “had tried creating a proof-of-concept?” David replied that he hadn’t tried linking a Rust object into the interpreter but “knows of mixed language projects like Firefox where Rust, C, and C++ are statically linked into the same binary”. David said it’s possible to do, but would be a “high-complexity prototype”.&lt;/p&gt;&lt;p&gt;Brandt Bucher, one of the contributors to CPython’s new JIT suggested that because the JIT is experimental and doesn’t use the CPython API that it may be an interesting candidate for being converted to Rust as a proof-of-concept although Brandt was clear he “wasn’t willing to do the work”.&lt;/p&gt;&lt;p&gt;Gregory Smith suggested starting with an extension module, as they are isolated. “We want a better build system, and we keep talking about it, but [a new build system] hasn’t manifested. It’s all about who is the one doing the work”. Thomas Wouters cautioned that non-optional parts of the standard library would be tough as they “would need to support all tiered platforms”. David agreed, saying that the “build system doesn’t have to happen first” and that the extension module approach was “analogous to the Rust for Linux project,” where certain areas of the kernel were moved to Rust first.&lt;/p&gt;&lt;p&gt;Barry Warsaw asked about the debuggability of Rust if it were adopted in CPython. David replied that the experience wouldn’t be much different. “Rust is creating native call stacks” and “you would see frames in the interpreter, in GDB you would see Rust symbols”.&lt;/p&gt;&lt;p&gt;Hood Chatham had concerns about bloat from panic and symbols for Rust objects being linked to the interpreter. David recommended turning off panic and disabling the Rust standard library, and that there were other ways to avoid bloat that the interpreter didn’t need. “Rust stable ABI is still in progress”.&lt;/p&gt;&lt;p&gt;Overall, after the discussion, core developers did not seem categorically opposed to an optional Rust extension module in the Python standard library, but the general consensus was that this work may hinge on some build system changes and questions around platform support.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/492926979113671038'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/492926979113671038'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025-what-do-core-developers-want-from-rust.html' title='The Python Language Summit 2025: What do core developers want from Rust?'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-2807804504136584913</id><published>2025-06-12T09:31:00.003-04:00</published><updated>2025-06-12T09:31:50.639-04:00</updated><title type='text'>The Python Language Summit 2025: Updates from the Python Docs Editorial Board</title><content type='html'>&lt;p&gt;Core developer and Python Docs Editorial Board member Mariatta presented an update on the Python Docs Editorial Board to the Language Summit. Mariatta credited her fellow board members Carol Willing, Guido van Rossum, Joanna Jablonski, and Ned Batchelder for putting together the presentation.&lt;/p&gt;&lt;p&gt;Mariatta started with the mission and vision of the Python Docs Editorial Board, including improving the quality of the Python documentation, getting consensus, and being the final decision makers for documentation issues. Mariatta pointed to the &lt;a href=&quot;http://python.github.io/editorial-board&quot;&gt;editorial board’s website&lt;/a&gt;, which hosts meeting minutes and a “changelog” of decisions.&lt;/p&gt;&lt;p&gt;Mariatta highlighted a few recent decisions, including using the vertical bar (“|”) instead of “or” when describing type information in function parameters and the use of “timezone” versus “time zone” in prose. Ned Batchelder is &lt;a href=&quot;https://devguide.python.org/contrib&quot;&gt;working on the developer guide&lt;/a&gt;, which will “eventually become the new contributors guide for Python”. The group is also modernizing Python tutorials, and Joanna Jablonski and Savannah Bailey are auditing the &lt;a href=&quot;https://docs.python.org/3/library/argparse.html&quot;&gt;argparse module documentation&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Mariatta shared that the vision of the Docs Editorial Board is to change Python documentation into a community resource. They hope to do this by making decisions to encourage new contributors and by reducing instances of an individual claiming ownership of a document. The board shared they are “seeing improvement” on this front.&lt;/p&gt;&lt;p&gt;Mariatta celebrated that the board was seeing more collaboration among different groups, such as a renewed emphasis on translations and usability of the documentation. Folks from the Python Software Foundation Education and Outreach Working Group have come to the documentation Discord asking questions and offering help.&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;Discussion&lt;/h2&gt;&lt;p&gt;A short, rapid-fire discussion broke out amongst core developers about the sometimes unfortunate state of pages on the “&lt;a href=&quot;http://python.org&quot;&gt;python.org&lt;/a&gt;” subdomain, such as a multitude of wikis. Thomas Wouters and Ned Deily remarked on the previous website revamp and how to avoid breakages, it was “easier to keep pages around, but that doesn’t mean anyone is responsible for the pages”.&lt;/p&gt;&lt;p&gt;Carol Willing, speaking for herself, thought it was “overdue to get rid of links to the wiki, particularly ones that have beginner Python stuff”. PSF executive director Deb Nicholson added that the PSF board was taking a “super macro view of &lt;a href=&quot;http://python.org&quot;&gt;python.org&lt;/a&gt;” and to “get in touch with the User Success Working Group if people have questions”.&lt;/p&gt;&lt;p&gt;Python documentation translations were a big topic of conversation during this Language Summit session. Mariatta noted that there were a few language translation groups that were “successful”, giving Korean and Spanish Python docs translations as examples. “We want to learn from groups like that so that even more languages can have that experience”, Mariatta shared, noting that &lt;a href=&quot;https://peps.python.org/pep-0545/&quot;&gt;PEP 545&lt;/a&gt;, which documents the Python documentation translation guide, focused too heavily on “getting started” rather than “how to continue”.&lt;/p&gt;&lt;p&gt;One of the highlighted issues of PEP 545 was that there would be a single coordinator and no process for adding additional translation coordinators in the case that existing coordinators weren’t available. Mariatta asked the group whether a new governance process, subcommittee, or working group might be able to step in in these situations to “unblock a translation community”.&lt;/p&gt;&lt;p&gt;Lysandros Nikolaou, who has been involved in the Greek translation of the Python docs, highlighted that knowledge-sharing across different translation groups is difficult and a significant barrier to other translations being successful, especially those with smaller communities. “PEP 545 specifies that translations have to have content in the translation language related to the CLA and license,” and this requirement “makes it very difficult for different communities to interact with each other and share knowledge”.&lt;/p&gt;&lt;p&gt;Lysandros shared how the Greek translation group started by “going to the Spanish translation repository and then translating [their processes] from Spanish to English to know what to do”. Lysandros argued that having only one translation coordinator shouldn’t be allowed, and that it’s “difficult enough working on a translation project let alone just one person working on [the translation project]” and that many teams that work on translations know “very little about how to do [process] documentation”. Lysandros agreed that bringing together coordinators would be helpful to every translation.&lt;/p&gt;&lt;p&gt;Donghee Na suggested standardizing on the translation platform across translation groups so that each group can focus their energy on the translation instead of “focusing energy on redoing the same work over and over”.&lt;/p&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/2807804504136584913'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/2807804504136584913'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025-docs-editorial-board.html' title='The Python Language Summit 2025: Updates from the Python Docs Editorial Board'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-3150299828172464697</id><published>2025-06-12T09:31:00.002-04:00</published><updated>2025-06-12T09:31:35.280-04:00</updated><title type='text'>The Python Language Summit 2025: Packaging Governance Process (PEP 772)</title><content type='html'>&lt;p&gt;&lt;a href=&quot;https://peps.python.org/pep-0772/&quot;&gt;PEP 772&lt;/a&gt; proposes a Packaging Governance Process through a new Python Packaging Council of 5 members (similar to the Python Steering Council). The entire project is a collaboration between Barry Warsaw, Pradyun Gedam, and Python Software Foundation Executive Director Deb Nicholson.&lt;/p&gt;&lt;p&gt;“Packaging is critical to Python’s success”, Barry opened, “Python has grown from a grassroots effort and now needs some formalization; now is the time for Packaging”. Barry explained that the Packaging Governance effort has grown out of the &lt;a href=&quot;http://wheelnext.dev/&quot;&gt;WheelNext initiative&lt;/a&gt;. Wheelnext touches many aspects of Python packaging, including installers, the wheel archive format, the Python Package Index, and CPython.&lt;/p&gt;&lt;p&gt;The Packaging Council was modeled after PEP 13 and the Python Steering Council, with a mandate for packaging standards and &lt;a href=&quot;http://packaging.python.org&quot;&gt;packaging.python.org&lt;/a&gt;. Authority would be given through the Python Steering Council, similar to how the Steering Council delegates packaging PEP decisions today.&lt;/p&gt;&lt;p&gt;There are still some open questions that were likely discussed in more detail at the Packaging Summit, also at PyCon US 2025. Barry enumerated a few issues the group was concerned with, such as how to seed the initial voting membership to form the first Packaging Council, whether to use Python Packaging Authority members, the PSF Packaging Working Group, core developer members, or likely some combination of multiple groups interested in Python packaging.&lt;/p&gt;&lt;p&gt;Barry shared that the Council would likely be in regular communication with the Steering Council but was weighing their options on how to best do updates to the community, either using &lt;a href=&quot;http://discuss.python.org&quot;&gt;discuss.python.org&lt;/a&gt;, Discord, or some other method. Also suggested was being able to share some staffing resources with the Steering Council, such as the Developers-in-Residence.&lt;/p&gt;&lt;p&gt;Pradyun added to the motivation for a Packaging Council, such as there only being “one standing delegate” for packaging PEPs. Pradyun also added that Python packaging is difficult to reason about, “the various pieces are all over, and you need to know everything to make things happen”.&lt;/p&gt;&lt;p&gt;Deb Nicholson shared that the Python Software Foundation gets contacted about packaging and improvements. “We have funding for packaging work, but we don’t have an entity to ask”. What the PSF wants is a group like the Python Steering Council functions, takes the community temperature, and knows who is interested and whether that entity can work with that PSF so that ideas can get all the way across the finish line”.&lt;/p&gt;&lt;p&gt;Barry clarified that the Packaging Council isn’t going to mandate what third-party tools have to do. The council intends to foster standards for interoperability while “still allowing lots of room for innovation and new ideas”. “Backwards compatibility is one of the axioms of Python packaging,” noted Barry and Pradyun agreed, saying that 12-year-old Python packages “still work” with current tools.&lt;/p&gt;&lt;p&gt;Thomas Wouters asked what Paul Moore, the standing delegate for packaging PEPs, thought of the packaging council PEP. Pradyun responded that “Paul likes the idea”. Deb shared that she had spoken with Paul “at length” and that some of the same problems are being felt with packaging as with Python and the Steering Council. “The amount of work to do compared to 5 years ago has increased 100 times over”. The three had been speaking to many others who have done packaging governance and conducting interviews. Most importantly, “people who have put in the work get to weigh in on PEP 772”.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/3150299828172464697'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/3150299828172464697'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025-packaging-governance-process.html' title='The Python Language Summit 2025: Packaging Governance Process (PEP 772)'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry><entry><id>tag:blogger.com,1999:blog-8520.post-5942252160277293208</id><published>2025-06-12T09:31:00.001-04:00</published><updated>2025-06-12T09:31:11.467-04:00</updated><title type='text'>The Python Language Summit 2025: Python on Mobile - Next Steps</title><content type='html'>&lt;p&gt;Russell Keith-Magee and Malcolm Smith were at the Language Summit this year to announce the status of mobile support for Python: “After many years, this year I can say that [Python on mobile] is there!” Russell proudly declared, with a large round of applause from the room.&lt;/p&gt;&lt;p&gt;All of the changes for &lt;a href=&quot;https://peps.python.org/pep-0730&quot;&gt;PEP 730&lt;/a&gt; and &lt;a href=&quot;https://peps.python.org/pep-0738&quot;&gt;PEP 738&lt;/a&gt; have been completed, and for Python 3.13, both iOS and Android are Tier 3 supported platforms. Continuous Integration (CI) is very stable, and failures are not because of iOS or Android.&lt;/p&gt;&lt;p&gt;Russell and Malcolm both wanted to know what was necessary for &lt;a href=&quot;https://peps.python.org/pep-0011/#tier-2&quot;&gt;Tier 2 support&lt;/a&gt; for iOS and Android. Tier 2 support means that releases are blocked when there are failures for the listed platforms, and that any breakages on those platforms during normal Python development would either need to be fixed or reverted within 24 hours of being detected by build bots.&lt;/p&gt;&lt;p&gt;The platforms both had the requisite 2 maintainers and stable continuous integration via buildbots. The only outstanding question was about whether official “artifacts” or “binaries” are needed for Tier 2 support, which Ned Deily dismissed, stating that “Linux is Tier 1 and doesn’t provide binary artifacts”. Knowing this, Russell and Malcom will proceed with requesting Tier 2 support for iOS and Android.&lt;/p&gt;&lt;p&gt;Russell asked if iOS and Android tests could be added to the GitHub Actions CI that runs on every pull request, making failures more visible (compared to buildbots, which must be explicitly requested). Russell noted that these test runs would not affect CI times due to being shorter than an existing job: the Windows x86-64 free-threaded GitHub Action. The only downside? Running iOS would require macOS ARM runners, which are “in short supply”. Ee Durbin, Director of Infrastructure at the Python Software Foundation, was able to purchase more macOS ARM runners shortly after this issue was identified.&lt;/p&gt;&lt;p&gt;Russell also requested a single-process GitHub Actions run using a Linux runner to catch common issues that fail on mobile, like test cases not being annotated properly as using subprocesses. Thomas Wouters agreed with the proposal to add a single-process test run, noting that this configuration “actually captures bugs” and makes it “easier for the pull request owner to fix issues”.&lt;/p&gt;&lt;p&gt;As far as Python packages go, the Beeware team has made progress; pip and PyPI both support iOS and Android wheels. The build tool Meson is adding support for iOS, and Malcom Smith is adding support for Android. Commonly used tools like “cibuildwheel” would require pre-compiled binaries in order to build mobile-friendly wheels, and “ideally these would be official CPython builds”. The team plans to work on more high-profile packages, like cryptography, to create mobile-friendly wheels.&lt;/p&gt;&lt;p&gt;The Beeware team is maintaining more Apple platforms than only iOS, such as the Apple tvOS, watchOS, and visionOS platforms. Each of these platforms has its own set of patches. Russell asked whether each of these platforms that are quite similar to each other needed their own Tier 3 status for the patches to be upstreamed to Python.&lt;/p&gt;&lt;p&gt;Russell then asked whether the top-level platform directories can be backported to previous versions of Python to accommodate the single XCode project for all platforms proposal. Thomas Wouters, release manager for Python 3.13 and 3.12, was happy to accept backported platform directories as they were unlikely to break many users. Ned Deily agreed and noted that “[he’d] like to get rid of everything in the Mac directory”.&lt;/p&gt;&lt;p&gt;The final question was regarding sysconfig data for mobile builds. Russell noted that mobile binaries are relocatable, but sysconfig data isn’t inherently relocatable and that this is “not just a mobile issue, also affects desktop relocatable and macOS framework builds”. Thomas chimed in again to say that sysconfig data was a “huge problem and not just for [mobile] because it’s tied to the build system”. “We should do something else and get rid of sysconfig data,” which received multiple claps and agreement amongst core developers.&lt;/p&gt;&lt;p&gt;Overall, the mobile story for Python is shaping up nicely, and after the Language Summit talk will likely be even more stable throughout the Python development process thanks to improvements in continuous integration and testing.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/5942252160277293208'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/8520/posts/default/5942252160277293208'/><link rel='alternate' type='text/html' href='https://pyfound.blogspot.com/2025/06/python-language-summit-2025-python-on-mobile.html' title='The Python Language Summit 2025: Python on Mobile - Next Steps'/><author><name>Seth Michael Larson</name><uri>http://www.blogger.com/profile/16555309043643874359</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author></entry></feed>